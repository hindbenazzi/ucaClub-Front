[{"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\serviceWorker.js":"2","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\App.js":"3","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\context\\UserContext.js":"4","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\context\\LayoutContext.js":"5","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\themes\\index.js":"6","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\home\\Home.js":"7","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\themes\\default.js":"8","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\parallax\\Parallax.js":"9","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\sliderBook\\SliderBook.js":"10","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\footer\\Footer.js":"11","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\header\\Header.js":"12","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Layout\\Layout.js":"13","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\addTarifs\\AddTarifs.js":"14","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\localUpdate\\LocalUpdate.js":"15","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\types\\Types.js":"16","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\localAdd\\LocalAdd.js":"17","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userAdd\\UserAdd.js":"18","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userUpdate\\UserUpdate.js":"19","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Layout\\styles.js":"20","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\locals\\Locals.js":"21","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\tables\\Tables.js":"22","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\maps\\Maps.js":"23","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\typography\\Typography.js":"24","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\Sidebar.js":"25","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Header\\Header.js":"26","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\PageTitle\\PageTitle.js":"27","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Header\\styles.js":"28","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\styles.js":"29","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\Dot.js":"30","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\typography\\styles.js":"31","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"32","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\maps\\styles.js":"33","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\UserAvatar\\UserAvatar.js":"34","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Notification\\Notification.js":"35","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Wrappers\\Wrappers.js":"36","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Widget\\Widget.js":"37","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\PageTitle\\styles.js":"38","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"39","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\UserAvatar\\styles.js":"40","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Notification\\styles.js":"41","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Widget\\styles.js":"42","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\login\\Login.js":"43","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\login\\styles.js":"44","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\reservations\\reservations.js":"45"},{"size":896,"mtime":1638377405451,"results":"46","hashOfConfig":"47"},{"size":5083,"mtime":1638377405485,"results":"48","hashOfConfig":"47"},{"size":1721,"mtime":1640953214655,"results":"49","hashOfConfig":"47"},{"size":2054,"mtime":1640951139945,"results":"50","hashOfConfig":"47"},{"size":1444,"mtime":1638377405450,"results":"51","hashOfConfig":"47"},{"size":534,"mtime":1638377405487,"results":"52","hashOfConfig":"47"},{"size":2541,"mtime":1641289560023,"results":"53","hashOfConfig":"47"},{"size":3127,"mtime":1641413816346,"results":"54","hashOfConfig":"47"},{"size":2950,"mtime":1640456130805,"results":"55","hashOfConfig":"47"},{"size":7044,"mtime":1641246075286,"results":"56","hashOfConfig":"47"},{"size":2729,"mtime":1640647494300,"results":"57","hashOfConfig":"47"},{"size":1734,"mtime":1640949449852,"results":"58","hashOfConfig":"47"},{"size":2514,"mtime":1641248474850,"results":"59","hashOfConfig":"47"},{"size":8346,"mtime":1640889074905,"results":"60","hashOfConfig":"47"},{"size":8861,"mtime":1640951442433,"results":"61","hashOfConfig":"47"},{"size":7462,"mtime":1640889413237,"results":"62","hashOfConfig":"47"},{"size":8362,"mtime":1640900466769,"results":"63","hashOfConfig":"47"},{"size":11120,"mtime":1640904983314,"results":"64","hashOfConfig":"47"},{"size":8620,"mtime":1640886307676,"results":"65","hashOfConfig":"47"},{"size":710,"mtime":1638377405432,"results":"66","hashOfConfig":"47"},{"size":4742,"mtime":1640950911328,"results":"67","hashOfConfig":"47"},{"size":3117,"mtime":1640951423004,"results":"68","hashOfConfig":"47"},{"size":1010,"mtime":1638377405474,"results":"69","hashOfConfig":"47"},{"size":4632,"mtime":1638377405482,"results":"70","hashOfConfig":"47"},{"size":3515,"mtime":1641248786208,"results":"71","hashOfConfig":"47"},{"size":10240,"mtime":1638377405428,"results":"72","hashOfConfig":"47"},{"size":447,"mtime":1638377405435,"results":"73","hashOfConfig":"47"},{"size":4043,"mtime":1638377405430,"results":"74","hashOfConfig":"47"},{"size":1363,"mtime":1638377405442,"results":"75","hashOfConfig":"47"},{"size":902,"mtime":1638377405439,"results":"76","hashOfConfig":"47"},{"size":389,"mtime":1638377405483,"results":"77","hashOfConfig":"47"},{"size":4589,"mtime":1638377405440,"results":"78","hashOfConfig":"47"},{"size":178,"mtime":1638377405476,"results":"79","hashOfConfig":"47"},{"size":620,"mtime":1638377405443,"results":"80","hashOfConfig":"47"},{"size":3413,"mtime":1638377405433,"results":"81","hashOfConfig":"47"},{"size":3971,"mtime":1638377405448,"results":"82","hashOfConfig":"47"},{"size":2581,"mtime":1638377405445,"results":"83","hashOfConfig":"47"},{"size":482,"mtime":1638377405436,"results":"84","hashOfConfig":"47"},{"size":1474,"mtime":1638377405441,"results":"85","hashOfConfig":"47"},{"size":291,"mtime":1638377405444,"results":"86","hashOfConfig":"47"},{"size":1040,"mtime":1638377405434,"results":"87","hashOfConfig":"47"},{"size":1015,"mtime":1638377405447,"results":"88","hashOfConfig":"47"},{"size":6169,"mtime":1640951109181,"results":"89","hashOfConfig":"47"},{"size":3281,"mtime":1638377405473,"results":"90","hashOfConfig":"47"},{"size":3132,"mtime":1641419353481,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"xnuyxl",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\index.js",[],["200","201"],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\serviceWorker.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\App.js",["202"],"import React from \"react\";\r\nimport { HashRouter, Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\r\n\r\n// components\r\nimport Layout from \"./Layout\";\r\n\r\n// pages\r\n\r\nimport Login from \"../pages/login\";\r\nimport Home from \"../pages/home/Home\";\r\n// context\r\nimport { useUserState } from \"../context/UserContext\";\r\n\r\nexport default function App() {\r\n  // global\r\n  var { isAuthenticated } = useUserState();\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/users\" />} />\r\n        \r\n        <Route  path=\"/home\"  component={Home} ></Route>\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        \r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\context\\UserContext.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\context\\LayoutContext.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\themes\\index.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\home\\Home.js",["203","204","205"],"import React  , { useState, useEffect  } from 'react';\r\nimport {Link , useParams} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Header from './../layout/header/Header'\r\nimport Footer from '../layout/footer/Footer'\r\nimport SliderBook from './../layout/sliderBook/SliderBook'\r\nimport Parallax from '../layout/parallax/Parallax'\r\nimport shape from '../../images/shape.png'\r\n\r\nconst urlgetAllType = \"http://127.0.0.1:8000/types\"\r\n\r\nexport default function Home() {\r\n\tconst [types ,setTypes] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\ttry{\r\n        const result = await axios(urlgetAllType);\r\n        setTypes(result.data);\r\n\t\t}\r\n\t\tcatch(err){\r\n\t\tconsole.log(err);\r\n\t\t}\r\n\t\t};\r\n\t\tfetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Header active={'home'}></Header>\r\n            <div className=\"breadcrumb breadcrumb-1 pos-center\">\r\n            <h1> RESERVATION </h1>\r\n\r\n\t</div>\r\n    <SliderBook typesLocal= {types}></SliderBook>\r\n\r\n    <div className=\"content\">\r\n\t\t    <div className=\"about clearfix\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"about-title pos-center mt-7\" style ={{marginTop : '100px'}} >\r\n\t\t\t\t\t\t<h3>WELCOME TO CLUB UCA</h3>\r\n\t\t\t\t\t\t<div className=\"title-shape\"><img alt=\"Shape\" src={shape}/></div>\r\n\t\t\t\t\t\t<p>Nullam quis risus eget urna mollis ornare vel eu leo. Cras mattis consectetur purus sit amet fermentum. Praesent <span className=\"active-color\">commodo</span> cursus magna, vel scelerisque nisl .Nulleget urna mattis consectetur purus sit amet fermentum</p>\r\n\t\t\t\t\t</div>\r\n                    </div>\r\n                    </div> \r\n                    </div>\r\n                 \r\n\r\n        <Parallax></Parallax>\r\n             <div className=\"newsletter-section\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"newsletter-top pos-center margint30\">\r\n\t\t\t\t\t\t<img alt=\"Shape Image\" src={shape} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"newsletter-form margint40 pos-center\">\r\n\t\t\t\t\t\t<div className=\"newsletter-wrapper\">\r\n\t\t\t\t\t\t\t<div className=\"pull-left\">\r\n\t\t\t\t\t\t\t\t<h2>Sign up newsletter</h2>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"pull-left\">\r\n\t\t\t\t\t\t\t\t<form action=\"#\" method=\"post\" id=\"ajax-contact-form\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Enter a e-mail address\"/>\r\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"SUBSCRIBE\" />\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n        <Footer></Footer>   \r\n\t\t</div>       \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\themes\\default.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\parallax\\Parallax.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\sliderBook\\SliderBook.js",["206","207","208","209","210","211","212","213","214","215","216"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport { Button } from 'primereact/button';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\nconst urlAddReservation = \"http://127.0.0.1:8000/reservation\"\r\nexport default function SliderBook(props) {\r\n\tconst [formData, setFormData] = useState({});\r\n\tconst [showMessage, setShowMessage] = useState(false);\r\n    const [etat , setEtat] = useState(0);\r\n\tconst types =props.typesLocal;\r\n\r\n\tvar date = new Date();\r\n\tvar dd = date.getDate();\r\n\tvar mm = date.getMonth()+1; \r\n\tvar yyyy = date.getFullYear();\r\n\tvar today = yyyy+\"-\"+mm+\"-\"+dd;\r\n\t\r\n    const defaultValues = {\r\n\t\ttype:'',\r\n        dateDebut: '',\r\n        dateFin: '',\r\n        adulte: 0,\r\n        enfant: 0,\r\n    \r\n    }\r\n\tconst  {formState: { errors }, handleSubmit, register , reset} = useForm({defaultValues});\r\n\r\n    /*useEffect(() => {\r\n\t\tconst urlgetAllType = \"http://127.0.0.1:8000/types\"\r\n        const fetchData = async () => {\r\n        const result = await axios(urlgetAllType);\r\n        setTypes(result.data);\r\n\t\tconsole.log(\"test\");\r\n\t\tfetchData();\r\n\t\t};\r\n\t\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps*/\r\n\r\n    //const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\r\n\tfunction handleChange(event) {\r\n\t\tconsole.log(event.target.value);\r\n\t  }\r\n    const onSubmit = (data) => {\r\n\t\t const res = \r\n                {   \r\n                    membre:{\r\n                        numAdesion:\"HF34756689\"\r\n                    }, \r\n\t\t\t\t\ttype:{\r\n\t\t\t\t\t\tid:data.type\r\n\t\t\t\t\t},\r\n                    resesrvationDetails: [\r\n                    {  \r\n                    dateDebut :Math.round(new Date(data.dateDebut).getTime()/1000),\r\n                    dateFin : Math.round(new Date(data.dateFin).getTime()/1000),\r\n                    nbrAdulte : data.adult,\r\n                    nbrEnfant : data.children,\r\n                    local:{\r\n                        id:0\r\n                    }}]\r\n                }\r\n\t\t\t\t \r\n                 setFormData(res);\r\n                 axios.post(urlAddReservation, res)\r\n                .then(response => {\r\n\t\t\t\t\tconsole.log(response.data.code);\r\n\t\t\t\t\tif(response.data.code == -2){\r\n\t\t\t\t\t\tsetEtat(-2);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(response.data.code == 1){\r\n\t\t\t\t\t\tsetEtat(1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n                .catch(err => console.log(err));\r\n\t\t\t\tsetShowMessage(true);\r\n\t\t\t\treset();\r\n\t\t\t\tsetEtat(0);\r\n\r\n\t}\r\n   //NotificationManager.success('Votre réservation est bien enregistré', 'Success',5000)\r\n   const dialogFooter = <div className=\"p-d-flex p-jc-center\"><Button label=\"OK\"  className=\"p-button-text\" autoFocus onClick={() => setShowMessage(false)}/></div>;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"book-slider\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t{etat != 0 ?  \r\n\t\t(<Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"center\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\r\n\t\t\t\t\r\n\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\tif (etat == 1) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t  <><i className=\"pi pi-check-circle mb-2\" style={{ fontSize: '5rem', color: 'var(--green-500)' }}></i>\r\n\t\t\t\t\t\t  <h5>Reservation Successful!</h5>\r\n\t\t\t\t\t\t  <p className=\"text-center\" style={{ lineHeight: 1.5, textIndent: '1rem' }}/>\r\n\t\t\t\t\t\t  <p>Votre réservation est en attente</p></>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else if (etat == -2) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<><i className=\"pi pi-times-circle mb-2\" style={{ fontSize: '5rem', color: 'var(--pink-500)' }}></i>\r\n\t\t\t\t\t\t\t<h5>Indisponibilité du local</h5>\r\n\t\t\t\t   \t\t\t<p className=\"text-center\" style={{ lineHeight: 1.5, textIndent: '1rem' }}/>\r\n\t\t\t\t\t\t\t<p>Le local ne est pas disponible</p></>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})()}\r\n\t\t\t\t\t\r\n                </div>\r\n            </Dialog>) : \"\"}\r\n\t\t\t\t<div className=\"row pos-center\">\r\n\t\t\t\t\t<div className=\"reserve-form-area\">\r\n\t\t\t\t\t\t<form  onSubmit={handleSubmit(onSubmit)} id=\"ajax-reservation-form\">\r\n\t\t\t\t\t\t\t<ul className=\"clearfix\">\r\n\t\t\t\t\t\t\t<li className=\"li-select\">\r\n\t\t\t\t\t\t\t\t\t<label>CATEGORIE</label>\r\n\t\t\t\t\t\t\t\t\t<select name=\"type\" {...register(\"type\",{required:'Type is required *'})}  style={{width : '100px'}} className=\"pretty-select\">\r\n\t\t\t\t\t\t\t\t\t\t{types.map(type => (\r\n\t\t\t\t\t\t\t\t\t\t<option key={type.id} value={type.id} >{type.label}</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t{errors.type  && <span className='text-warning' style ={{fontSize : '12px'}}>{errors.type.message}</span>}\r\n\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"li-input\">\r\n\t\t\t\t\t\t\t\t\t<label>ARRIVAL</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"date\" min={today}   id=\"dpd1\" {...register(\"dateDebut\",{required:'Date debut is required *'})}  name=\"dateDebut\" className=\"date-selector\" />\r\n\t\t\t\t\t\t\t\t\t{errors.dateDebut  && <span className='text-warning' style ={{fontSize : '12px'}}>{errors.dateDebut.message}</span>}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"li-input\">\r\n\t\t\t\t\t\t\t\t\t<label>DEPARTURE</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"date\" id=\"dpd2\" min={today} {...register(\"dateFin\",{required:'Date fin is required *'})}  name=\"dateFin\" className=\"date-selector\"/>\r\n\t\t\t\t\t\t\t\t\t{errors.dateFin  && <span className='text-warning text-left' style ={{fontSize : '12px'}}>{errors.dateDebut.message}</span>}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"li-select\">\r\n\t\t\t\t\t\t\t\t\t<label>ADULT</label>\r\n\t\t\t\t\t\t\t\t\t<select name=\"adult\" {...register(\"adult\")}   className=\"pretty-select\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\" >1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"li-select\">\r\n\t\t\t\t\t\t\t\t\t<label>CHILDREN</label>\r\n\t\t\t\t\t\t\t\t\t<select name=\"children\"  {...register(\"children\")}  className=\"pretty-select\">\r\n\t\t\t\t\t\t\t\t\t    <option value=\"0\">0</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<div className=\"button-style-1 margint26\">\r\n\t\t\t\t\t\t\t\t\t\t<input  type=\"submit\" value=\"RESERVER\"/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n        <div className=\"bottom-book-slider\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row pos-center\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><i className=\"fa fa-shopping-cart\"></i> WOOCOMMERCE COMPATIBLE</li>\r\n\t\t\t\t\t\t<li><i className=\"fa fa-globe\"></i> LANGUAGE COMPATIBLE</li>\r\n\t\t\t\t\t\t<li><i className=\"fa fa-coffee\"></i> COFFEE & BREAKFAST FREE</li>\r\n\t\t\t\t\t\t<li><i className=\"fa fa-windows\"></i> FREE WI-FI ALL ROOM</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n        </div>\r\n       \r\n    )\r\n\r\n\r\n}","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\footer\\Footer.js",["217","218","219","220","221"],"import React from 'react'\r\nimport logo from'./../../../images/logoFST.png';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div>\r\n            \t<div className=\"footer margint40\">\r\n\t\t\t<div className=\"main-footer\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-lg-2 col-sm-2 footer-logo\">\r\n\t\t\t\t\t\t\t<img alt=\"Logo\" src={logo} style={{width : '60px', height:'80px'}} className=\"img-responsive\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-lg-10 col-sm-10\">\r\n\t\t\t\t\t\t\t<div className=\"col-lg-3 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<h6>TOUCH WITH US</h6>\r\n\t\t\t\t\t\t\t\t<ul className=\"footer-links\">\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Facebook</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Twitter</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Google +</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"#\">otels.com</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Tripadvisor</a></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-3 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<h6>ABOUT LUXEN</h6>\r\n\t\t\t\t\t\t\t\t<ul className=\"footer-links\">\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"404.html\">Error Page</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"about.html\">About</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"blog.html\">Blog</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"blog-details.html\">Blog Single</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"category-grid.html\">Category Grid</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"category-list.html\">Category List</a></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-3 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<h6>PAGES SITE</h6>\r\n\t\t\t\t\t\t\t\t<ul className=\"footer-links\">\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"contact.html\">Contact</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"gallery.html\">Gallery</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"index-full-screen.html\">Home Full Screen</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"left-sidebar-page.html\">Left Sidebar Page</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"right-sidebar-page.html\">Right Sidebar Page</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"room-single.html\">Room Single</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"under-construction.html\">Under Construction</a></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg-3 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<h6>CONTACT</h6>\r\n\t\t\t\t\t\t\t\t<ul className=\"footer-links\">\r\n\t\t\t\t\t\t\t\t\t<li><p><i className=\"fa fa-map-marker\"></i> Lorem ipsum dolor sit amet lorem Victoria 8011 Australia </p></li>\r\n\t\t\t\t\t\t\t\t\t<li><p><i className=\"fa fa-phone\"></i> +61 3 8376 6284 </p></li>\r\n\t\t\t\t\t\t\t\t\t<li><p><i className=\"fa fa-envelope\"></i> <a href=\"mailto:info@2035themes.com\">info@2035themes.com</a></p></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"pre-footer\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"pull-left\"><p>© LUXEN OTELS 2014</p></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\header\\Header.js",["222","223","224","225","226","227","228"],"import React from 'react'\r\nimport logo from'./../../../images/logoFST.png';\r\nimport {Link , Router} from \"react-router-dom\";\r\nimport img from  './../../../images/default-user-icon-.jpg'\r\nimport logout from  './../../../images/logout.png'\r\n\r\nexport default function Header(props) {\r\n\tlet active = props.active;\r\n\t/*function menuToggle(){\r\n\t\tconst toggleMenu = document.querySelector('.menu');\r\n\t\ttoggleMenu.classList.toggle('active');\r\n\t}*/\r\n    return (\r\n\t\t<div id=\"wrapper\">\r\n\t\t<div className=\"main-header\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"pull-left\">\r\n\t\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t\t<a href=\"index.html\"><img alt=\"Logo\" src={logo} className=\"img-responsive\" style={{width : '60px', height:'80px'}} /></a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"pull-right\">\r\n\t\t\t\t\t\t<div className=\"pull-left\">\r\n\t\t\t\t\t\t\t<nav className=\"nav\">\r\n\t\t\t\t\t\t\t\t<ul id=\"navigate\" className=\"sf-menu navigate\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<li  className={active == 'home' ? 'active' : ''}><Link to={{ pathname: \"/home\" }} >ACCUEIL</Link>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li ><a href=\"#\" className= {active == 'about' ? 'active' : ''}>A PROPOS</a>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"contact.html\">CONTACT</a></li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t\t\t<img src={img}  style={{width : '40px', height:'40px', marginBottom :'10px'}} />\r\n\t\t\t\t\t\t\t\t\t<div className=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"#\"><img src={logout} style={{width : '19px', height:'19px' ,marginRight:'6px'}}/> Déconnecter</a>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t\t\t\r\n        \r\n    )\r\n}\r\n\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Layout\\Layout.js",["229","230","231","232"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Tables from \"../../pages/tables\";\r\nimport Locals from \"../../pages/locals\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport UserUpdate from \"../../pages/userUpdate/UserUpdate\";\r\nimport UserAdd from \"../../pages/userAdd/UserAdd\";\r\nimport LocalAdd from \"../../pages/localAdd/LocalAdd\";\r\nimport LocalUpdate from \"../../pages/localUpdate/LocalUpdate\";\r\nimport Types from \"../../pages/types/Types\";\r\nimport AddTarif from \"../../pages/addTarifs/AddTarifs\";\r\nimport Reservations from \"../../pages/reservations/reservations\";\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/Users\" component={Tables} />\r\n              <Route path=\"/app/local/:id/tarifs\" component={AddTarif} />\r\n              <Route path=\"/app/locals\" component={Locals} />\r\n              <Route path=\"/app/types\" component={Types} />\r\n              <Route path=\"/app/addLocal\" component={LocalAdd} />\r\n              <Route path=\"/app/updateUser/:id\" component={UserUpdate} />\r\n              <Route path=\"/app/addUser\" component={UserAdd} />\r\n              <Route path=\"/app/updateLocal/:id\" component={LocalUpdate} />\r\n              <Route path=\"/app/reservations\" component={Reservations} />\r\n             \r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n             \r\n              <div>\r\n               \r\n               \r\n               \r\n              </div>\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\addTarifs\\AddTarifs.js",["233","234","235","236","237","238","239","240","241","242"],"import React, { Fragment } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Delete, Build } from \"@material-ui/icons\";\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport {\r\n\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  Divider,\r\n  Button,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = {\r\n  Icon: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  Paper: {\r\n    margin: \"auto\",\r\n    padding: 10,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    width: 500\r\n  }\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/local/tarif/\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/tarif/local/\";\r\nconst baseURL2 = \"http://127.0.0.1:8000/tarif/id/\";\r\nconst AddTarif = (props) => {\r\n  const id = useParams();\r\n  const classes = useStyles();\r\n  const gridClass = \"fade-out\";\r\n  const cardStyle = {\r\n    width: \"95%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft: \"0px\",\r\n    marginTop: \"50px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    nbrEnfant: \"\",\r\n    nbrAdulte: \"\",\r\n    prix: \"\"\r\n  });\r\n  const [formState, setFormState] = React.useState(\"add\")\r\n  const fetchData = async () => {\r\n    await axios.get(baseURL1 + id.id, values).then((response) => {\r\n      setTarifs(response.data);\r\n      console.log(response.data)\r\n    })\r\n  }\r\n  const [tarifs, setTarifs] = React.useState([]);\r\n  const addTarifs = async (e) => {\r\n    e.preventDefault()\r\n    await axios.put(baseURL + id.id, values).then((response) => {\r\n      console.log(response.data)\r\n      setTarifs([...tarifs, values]);\r\n      console.log(tarifs)\r\n      fetchData()\r\n      setValues({\r\n        nbrEnfant: \"\",\r\n        nbrAdulte: \"\",\r\n        prix: \"\"\r\n      })\r\n    });\r\n\r\n  }\r\n  const [tarifId,setTarifId]=React.useState()\r\n  const updateTarif = async (item) => {\r\n\r\n    console.log(item.prix)\r\n    setFormState(\"update\")\r\n    setTarifId(item.id)\r\n    setValues({\r\n      nbrEnfant: item.nbrEnfant,\r\n      nbrAdulte: item.nbrAdulte,\r\n      prix: item.prix\r\n    })\r\n\r\n\r\n  }\r\n  const tarifsUpdate=async (e)=>{\r\n    console.log(\"updating......\")\r\n    e.preventDefault()\r\n    await axios.put(baseURL2 + tarifId, values).then((response) => {\r\n      console.log(response.data)\r\n      setTarifs([...tarifs, values]);\r\n      console.log(tarifs)\r\n      fetchData()\r\n      setValues({\r\n        nbrEnfant: \"\",\r\n        nbrAdulte: \"\",\r\n        prix: \"\"\r\n      })\r\n    });\r\n  }\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      await axios.get(baseURL1 + id.id, values).then((response) => {\r\n        setTarifs(response.data);\r\n        console.log(response.data)\r\n      })\r\n    }\r\n    fetchData()\r\n\r\n  }, []);\r\n  const handleChange = prop => event => {\r\n    \r\n    setValues({ ...values, [prop]: event.target.value});\r\n    console.log(values)\r\n  };\r\n  const deleteTarif = async (id) => {\r\n    setValues({\r\n      nbrEnfant: \"\",\r\n      nbrAdulte: \"\",\r\n      prix: \"\"\r\n    })\r\n    await axios.delete(baseURL2 + tarifId).then((response) => {\r\n      console.log(response.data)\r\n      fetchData()\r\n    });\r\n  }\r\n  const listTarifs = tarifs.map((item) => {\r\n    return (\r\n      <Grid\r\n        xs={12}\r\n        className={`${gridClass}`}\r\n        key={item.id}\r\n        item\r\n        onClick={() => { updateTarif(item) }}>\r\n        <Paper elevation={2} style={styles.Paper}>\r\n          <span style={styles.Todo}> <p style={{ float: \"left\" }}>Nombre des adultes: {(tarifs.length != 0) ? item.nbrAdulte : \"\"} Nombre des enfants:  {(tarifs.length != 0) ? item.nbrEnfant : \"\"}  Prix : {(tarifs.length != 0) ? item.prix : \"\"}  </p></span>\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"Delete\"\r\n            onClick={() => deleteTarif(item.id)}\r\n          >\r\n            <Delete fontSize=\"small\" />\r\n          </IconButton >\r\n        </Paper><br />\r\n      </Grid>\r\n    )\r\n  })\r\n  const backToadd = () => {\r\n    setFormState(\"add\")\r\n    setValues({\r\n      nbrEnfant: \"\",\r\n      nbrAdulte: \"\",\r\n      prix: \"\"\r\n    })\r\n  }\r\n  const { action } = useParams();\r\n  return (\r\n    <Fragment>\r\n      {formState != \"add\" && <Button\r\n        variant=\"contained\"\r\n        size=\"medium\"\r\n        color=\"secondary\"\r\n        onClick={() => { backToadd() }}\r\n      >Retour vers l'ajout</Button>}\r\n      <Grid container>\r\n\r\n        <Grid item xs={5} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n            <form>\r\n              <Divider className=\"my-4\" />\r\n\r\n              <div >\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.nbrAdulte}\r\n                  type=\"number\"\r\n                  label=\" Nombre Adulte\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('nbrAdulte')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                \r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.nbrEnfant}\r\n                  type=\"number\"\r\n                  label=\" Nombre Enfants\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('nbrEnfant')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                    Prix\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-phone\"\r\n                    value={values.prix}\r\n                    onChange={handleChange('prix')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={180}\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n              <Button variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ marginLeft: \"57%\" }} onClick={formState == \"add\" ? addTarifs : tarifsUpdate}>\r\n                {formState == \"add\" ? \"Ajouter Tarif\" : \"Modifier Tarif\"}\r\n              </Button>\r\n              <br /><br />\r\n            </ form>\r\n          </Card>\r\n\r\n        </Grid>\r\n        <Grid xs={5} style={{ gap: \"1rem\", marginTop: \"50px\" }}>\r\n          {listTarifs}\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTarif;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\localUpdate\\LocalUpdate.js",["243","244","245"],"import React, { Fragment } from 'react';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/menuitem'\r\n\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  Divider,\r\n  Button,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/local\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/types/\";\r\nconst LocalUpdate = (props) => {\r\n  const id = useParams();\r\n  const classes = useStyles();\r\n  const cardStyle = {\r\n    width: \"100%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft: \"200px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    nom: \"\",\r\n    description: \"\",\r\n    adresse: \"\",\r\n    maxAdulte: \"\",\r\n    maxEnfant: \"\",\r\n    typeLabel: \"\",\r\n    type: \"\"\r\n  });\r\n  const [types, setTypes] = React.useState([]);\r\n  React.useEffect(() => {\r\n    console.log(\"id\")\r\n    console.log(id)\r\n    const fetchData = async () => {\r\n      await axios.get(baseURL + '/id/' + id.id).then((response) => {\r\n        setValues({\r\n          nom: response.data[0].nom,\r\n          description: response.data[0].description,\r\n          adresse: response.data[0].adresse,\r\n          maxAdulte: response.data[0].maxAdulte,\r\n          maxEnfant: response.data[0].maxEnfant,\r\n          typeLabel: response.data[0].type.label,\r\n          type: response.data[0].type.type\r\n        })\r\n        \r\n      })\r\n      await axios.get(baseURL1).then((response)=>{\r\n        setTypes(response.data);\r\n        \r\n      })\r\n    }\r\n    fetchData()\r\n    console.log(types)\r\n  }, []);\r\n  const updateLocal = async (e) => {\r\n    e.preventDefault()\r\n    await axios.put(baseURL + '/' + id.id, values).then((response) => {\r\n      console.log(response.data)\r\n      props.history.push({\r\n        pathname: \"/app/locals\"\r\n      })\r\n    });\r\n  }\r\n  const handleChange = prop => event => {\r\n    if(prop == \"typeLabel\"){\r\n      console.log(\"change label\")\r\n        types.forEach(item=>{\r\n          if(item.label==event.target.value){\r\n            setValues({ ...values, \"type\": item.type });\r\n          }\r\n        }\r\n          )\r\n    }\r\n    setValues({ ...values, [prop]: event.target.value });\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n\r\n        <Grid item xs={12} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n            <form>\r\n              <Divider className=\"my-4\" />\r\n\r\n              <div >\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-fname\">\r\n                    Nom du local\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-fname\"\r\n                    value={values.nom}\r\n                    onChange={handleChange('nom')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <DescriptionIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-lname\">\r\n                    Description\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-lname\"\r\n                    value={values.description}\r\n                    onChange={handleChange('description')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <DescriptionIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                    Adresse\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-phone\"\r\n                    value={values.adresse}\r\n                    onChange={handleChange('adresse')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <PlaceIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={180}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.maxAdulte}\r\n                  type=\"number\"\r\n                  label=\" Max Adulte\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('maxAdulte')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                \r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.maxEnfant}\r\n                  type=\"number\"\r\n                  label=\" Max Enfants\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('maxEnfant')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n               \r\n                <FormControl \r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                  <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.typeLabel}\r\n                    onChange={handleChange('typeLabel')}\r\n                  >\r\n                   {\r\n                   types.map(item=>\r\n                    <MenuItem value={item.label} key={item.type}>{item.label}</MenuItem>\r\n                  )\r\n                   }\r\n                  </Select>\r\n\r\n                </FormControl>\r\n                \r\n              </div>\r\n              <Button variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ marginLeft: \"57%\" }} onClick={updateLocal}>\r\n                Modifier Local\r\n              </Button>\r\n              <br /><br />\r\n            </ form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LocalUpdate;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\types\\Types.js",["246","247","248","249","250","251"],"import React from \"react\";\r\nimport { Grid ,Button} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport { Dialog, DialogTitle, DialogContent, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport StyleIcon from '@material-ui/icons/Style';\r\nimport {\r\n    InputLabel,\r\n    InputAdornment,\r\n    IconButton,\r\n    Card,\r\n    FormControl,\r\n    Divider\r\n  } from '@material-ui/core';\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\n\r\n\r\n\r\nimport { Add } from \"@material-ui/icons\";\r\n\r\n\r\nconst columns = [\r\n  {\r\n    label: \"Id\",\r\n    name: \"id\",\r\n    \r\n  },\r\n  {\r\n    \r\n    label: \"Labelle\",\r\n    name: \"label\",\r\n    \r\n  },\r\n  {\r\n    \r\n    label: \"Type\",\r\n    name: \"type\",\r\n    \r\n  }\r\n  \r\n]\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(20)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    },\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n      }\r\n}))\r\n\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/types/\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/type\";\r\nexport default function Types(props) {\r\n  const classes = useStyles();\r\n  const [types, setTypes] = React.useState([]);\r\n  const [label, setLabel] = React.useState(\"\");\r\n  const [type, setType] = React.useState(\"\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [mod, setMod] = React.useState(false);\r\n  const [id, setId] = React.useState();\r\n  const [openPopup, setOpenPopup] = React.useState(false);\r\n  \r\n  const fetchData = async () => {\r\n    await axios.get(baseURL).then((response)=>{\r\n      setTypes(response.data);\r\n      console.log(response.data)\r\n    })\r\n  }\r\nReact.useEffect(() => {\r\n  const fetchData = async () => {\r\n    await axios.get(baseURL).then((response)=>{\r\n      setTypes(response.data);\r\n      console.log(response.data)\r\n    })\r\n}\r\nfetchData()\r\n \r\n}, []);\r\nconst handleChange = prop => event => {\r\n  if(prop==\"label\"){\r\n    setLabel(event.target.value);\r\n    console.log(label)\r\n  }else{\r\n    setType(event.target.value)\r\n  }\r\n    \r\n  };\r\n  const onRowClick = (rowData, rowMeta) => {\r\n    setMod(true)\r\n    setId(rowData[0])\r\n    console.log(\"----RowClick\");\r\n    console.log(\"rowData: \", rowData);\r\n    console.log(\"rowMeta: \", rowMeta);\r\n     setLabel(rowData[1])\r\n     setType(rowData[2])\r\n     setOpenPopup(true)\r\n  }\r\n  const deleteItem=async (uId)=>{\r\n    axios\r\n  .delete(baseURL1+'/'+uId)\r\n  .then(() => {\r\n    fetchData()\r\n    \r\n  });\r\n}\r\n  const onRowSelectionChange = (curRowSelected, allRowsSelected) => {\r\n    console.log(\"All Selected: \", allRowsSelected);\r\n    let ids=[];\r\n    allRowsSelected.map((item)=>{\r\n      ids.push(types[item.index].id)\r\n    })\r\n    setSelected(ids)\r\n  }\r\n  const updateType = async (e) => {\r\n    e.preventDefault()\r\n    await axios.put(baseURL1+'/'+id,{label:label,type:type}).then((response) => {\r\n        console.log(response.data)\r\n        setOpenPopup(false)\r\n        fetchData()\r\n        setLabel(\"\")\r\n      });\r\n}\r\n  const onRowsDelete= (rowsDeleted, newData) => {\r\n    console.log('rowsDeleted');\r\n    console.log(selected);\r\n    selected.forEach((item,index)=>{\r\n      deleteItem(item)\r\n    })\r\n    console.log(types[rowsDeleted.data[0].index].id)\r\n  }\r\n  const options = {\r\n\t\tfilterType: 'checkbox',\r\n\t\tonRowClick: onRowClick,\r\n\t\tonRowSelectionChange: onRowSelectionChange,\r\n        onRowsDelete:onRowsDelete\r\n    \r\n\t};\r\n    const addType = async (e) => {\r\n        e.preventDefault()\r\n        await axios.post(baseURL1,{label:label,type:type}).then((response) => {\r\n            console.log(response.data)\r\n            setOpenPopup(false)\r\n            fetchData()\r\n            setLabel(\"\")\r\n          });\r\n    }\r\n \r\n  return (\r\n    <>\r\n      <PageTitle title=\"Liste des Types des locaux\" button={<Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      onClick={()=>{setOpenPopup(true) \r\n       setLabel(\"\")\r\n       setMod(false)\r\n    }}\r\n      color=\"secondary\"\r\n    ><Add></Add></Button>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Liste des Types des locaux\"\r\n            data={types}\r\n            columns={columns}\r\n            options={options}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {mod?\"Modifier\":\"Ajouter\"}\r\n                    </Typography>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Button>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n            <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-label\">\r\n                  Labelle\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-phone\"\r\n                  value={label}\r\n                  onChange={handleChange('label')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <LabelIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={180}\r\n                />\r\n              </FormControl> <br /><br />\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-label\">\r\n                  Type\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-phone\"\r\n                  value={type}\r\n                  onChange={handleChange('type')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <StyleIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={180}\r\n                />\r\n              </FormControl>  <br /><br />\r\n              <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"10%\"}} onClick={mod? updateType :addType} >\r\n               {mod?\"Modifier Type de local\":\"Ajouter Type de local\"}\r\n               </Button>\r\n            </DialogContent>\r\n        </Dialog>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\localAdd\\LocalAdd.js",["252","253","254","255","256"],"import React, { Fragment } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/menuitem';\r\n\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  Divider,\r\n  Button,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useParams} from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/local\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/types/\";\r\nconst LocalAdd = (props) => {\r\n  const classes = useStyles();\r\n  const cardStyle={\r\n    width: \"100%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft:\"200px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    nom: \"\",\r\n    description:  \"\",\r\n    adresse: \"\",\r\n    maxAdulte:\"\",\r\n    maxEnfant:\"\",\r\n    type: \"\",\r\n    typeLabel:\"\"\r\n  });\r\n  const [types, setTypes] = React.useState([]);\r\n\r\n  \r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      \r\n      await axios.get(baseURL1).then((response)=>{\r\n        setTypes(response.data);\r\n        \r\n      })\r\n    }\r\n    fetchData()\r\n    console.log(types)\r\n  }, []);\r\n    const addLocal = async (e) => {\r\n        e.preventDefault()\r\n        await axios.post(baseURL,values).then((response) => {\r\n            console.log(response.data)\r\n            props.history.push({\r\n              pathname: \"/app/locals\"\r\n            })\r\n          });\r\n    }\r\n    \r\n\r\n  const handleChange = prop => event => {\r\n    if(prop == \"typeLabel\"){\r\n      console.log(\"change label\")\r\n        types.forEach(item=>{\r\n          if(item.label==event.target.value){\r\n            console.log(\"right one\")\r\n            setValues({ ...values, \"type\": item.type });\r\n          }\r\n        }\r\n          )\r\n    }\r\n   setValues({ ...values, [prop]: event.target.value});\r\n    console.log(values)\r\n  };\r\n\r\n\r\n  const { action } = useParams();\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n        \r\n        <Grid item xs={12} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n        <form>\r\n            <Divider className=\"my-4\" />\r\n\r\n            <div >\r\n               <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-fname\">\r\n                  Nom du local\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-fname\"\r\n                  value={values.nom}\r\n                  onChange={handleChange('nom')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                         <DescriptionIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-lname\">\r\n                Description\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-lname\"\r\n                  value={values.description}\r\n                  onChange={handleChange('description')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <DescriptionIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                  Adresse\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-phone\"\r\n                  value={values.adresse}\r\n                  onChange={handleChange('adresse')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <PlaceIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={180}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.maxAdulte}\r\n                  type=\"number\"\r\n                  label=\" Max Adulte\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('maxAdulte')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                \r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.maxEnfant}\r\n                  type=\"number\"\r\n                  label=\" Max Enfants\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('maxEnfant')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n              <FormControl \r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                  <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.typeLabel}\r\n                    onChange={handleChange('typeLabel')}\r\n                  >\r\n                   {\r\n                   types.map(item=>\r\n                    <MenuItem value={item.label} key={item.type}>{item.label}</MenuItem>\r\n                  )\r\n                   }\r\n                  </Select>\r\n\r\n                </FormControl>\r\n               \r\n            </div>\r\n            <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"57%\"}} onClick={addLocal}>\r\n             Ajouter Local\r\n            </Button>\r\n            <br /><br />\r\n        </ form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LocalAdd;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userAdd\\UserAdd.js",["257","258","259","260","261","262","263","264","265","266","267","268"],"import React, { Fragment } from 'react';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/menuitem'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Grid,\r\n  Button,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  FormControl,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport PhoneEnabledIcon from '@material-ui/icons/PhoneEnabled';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useParams} from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/user\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/auth/register\";\r\nconst UserAdd = (props) => {\r\n  const classes = useStyles();\r\n  const cardStyle={\r\n    width: \"100%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft:\"200px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    firstName: \"\",\r\n    lastName:  \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    numAdesion: \"\",\r\n    role:\"\",\r\n    password:\"\"\r\n  });\r\n  const [visiblePass, setVisiblePass] = React.useState(false);\r\n  const [visiblePassC, setVisiblePassC] = React.useState(false);\r\n  const [pass, setPass] = React.useState(\"\");\r\n  const [isAdmin, setIsAdmin] = React.useState(false);\r\n    const addUser = async (e) => {\r\n        e.preventDefault()\r\n        const sendData= async ()=>{\r\n          await axios.post(baseURL1,values).then((response) => {\r\n            console.log(response.data)\r\n            props.history.push({\r\n              pathname: \"/app/users\"\r\n            })\r\n          });\r\n        }\r\n        if(values.password!=\"\" && pass==values.password && values.role==\"ROLE_ADMIN\"){\r\n          sendData()\r\n        }else if(values.role==\"ROLE_USER\"){\r\n          sendData()\r\n        }else{\r\n          console.log(\"mismatched password\")\r\n        }\r\n       \r\n    }\r\n    \r\n\r\n  const handleChange = prop => event => {\r\n    if(prop==\"pass\"){\r\n      setPass(event.target.value)\r\n    }else{\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  }\r\n  if(prop=\"role\"&& event.target.value==\"ROLE_ADMIN\"){\r\n     setIsAdmin(true)\r\n  }else if(prop=\"role\"&& event.target.value==\"ROLE_USER\"){\r\n    setIsAdmin(false)\r\n  }\r\n    console.log(values)\r\n  };\r\n\r\n\r\n  const { action } = useParams();\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n        \r\n        <Grid item xs={12} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n        <form>\r\n            <Divider className=\"my-4\" />\r\n\r\n            <div >\r\n            <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-fname\">\r\n                  Prenom\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-fname\"\r\n                  value={values.firstName}\r\n                  onChange={handleChange('firstName')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                         <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-lname\">\r\n                 Nom\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-lname\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange('lastName')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                  Numéro de Téléphone\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-phone\"\r\n                  value={values.phoneNumber}\r\n                  onChange={handleChange('phoneNumber')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <PhoneEnabledIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={180}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-mail\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-mail\"\r\n                  value={values.email}\r\n                  onChange={handleChange('email')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <EmailIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                  Numéro d'adhesion\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-adesion\"\r\n                  value={values.numAdesion}\r\n                  onChange={handleChange('numAdesion')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <DialpadIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n              <FormControl \r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\"\r\n                labelWidth={150}>\r\n                  <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.role}\r\n                    onChange={handleChange('role')}\r\n                  >\r\n                   \r\n                    <MenuItem value={\"ROLE_USER\"} >USER</MenuItem>\r\n                    <MenuItem value={\"ROLE_ADMIN\"} >ADMIN</MenuItem>\r\n                  </Select>\r\n                  \r\n                </FormControl>\r\n                {isAdmin && <div>\r\n                \r\n                <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                Mot de passe\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-password-input\"\r\n                  value={values.password}\r\n                  type={ visiblePass ?\"text\" : \"password\"}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('password')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\"\r\n                        onClick={()=>setVisiblePass(!visiblePass)}\r\n                        >\r\n                           {visiblePass ? <VisibilityOffIcon  /> :<VisibilityIcon />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                Confirmé le mot de passe\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-number\"\r\n                  value={pass}\r\n                  type={ visiblePassC ?\"text\" : \"password\"}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('pass')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\"\r\n                        onClick={()=>setVisiblePassC(!visiblePassC)}\r\n                        >\r\n                            {visiblePassC ? <VisibilityOffIcon  /> :<VisibilityIcon />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n\r\n               \r\n                </div>}\r\n            </div>\r\n            <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"57%\"}} onClick={addUser}>\r\n             Ajouter Utilisateur\r\n            </Button>\r\n            <br /><br />\r\n        </ form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserAdd;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userUpdate\\UserUpdate.js",["269","270","271","272"],"import React, { Fragment } from 'react';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/menuitem'\r\nimport PhoneEnabledIcon from '@material-ui/icons/PhoneEnabled';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  FormControl,\r\n  Button,\r\n  Divider\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/user\";\r\nconst UserUpdate = (props) => {\r\n  const id = useParams();\r\n  const classes = useStyles();\r\n  const cardStyle = {\r\n    width: \"100%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft: \"200px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    numAdesion: \"\",\r\n    role: \"\"\r\n  });\r\n  React.useEffect(() => {\r\n    console.log(id)\r\n    const fetchData = async () => {\r\n      await axios.get(baseURL + '/id/' + id.id).then((response) => {\r\n        setValues({\r\n          firstName: response.data.firstName,\r\n          lastName: response.data.lastName,\r\n          email: response.data.email,\r\n          phoneNumber: response.data.phoneNumber,\r\n          numAdesion: response.data.numAdesion,\r\n          role: response.data.roles[1]!=null ?response.data.roles[1]: response.data.roles[0]\r\n        })\r\n\r\n      })\r\n\r\n    }\r\n    fetchData()\r\n\r\n  }, []);\r\n\r\n  const updateUser = async (e) => {\r\n    e.preventDefault()\r\n    await axios.put(baseURL + '/' + id.id, values).then((response) => {\r\n      console.log(response.data)\r\n      props.history.push({\r\n        pathname: \"/app/users\"\r\n      })\r\n    });\r\n  }\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    console.log(values)\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n  const { action } = useParams();\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n\r\n        <Grid item xs={12} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n            <form>\r\n              <Divider className=\"my-4\" />\r\n\r\n              <div >\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-fname\">\r\n                    Prenom\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-fname\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange('firstName')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-lname\">\r\n                    Nom\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-lname\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange('lastName')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                    Numéro de Téléphone\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-phone\"\r\n                    value={values.phoneNumber}\r\n                    onChange={handleChange('phoneNumber')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <PhoneEnabledIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={180}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-mail\">\r\n                    Email\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-mail\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <EmailIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                    Numéro d'adhesion\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-adesion\"\r\n                    value={values.numAdesion}\r\n                    onChange={handleChange('numAdesion')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <DialpadIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={150}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.role}\r\n                    onChange={handleChange('role')}\r\n                  >\r\n\r\n                    <MenuItem value={\"ROLE_USER\"} >USER</MenuItem>\r\n                    <MenuItem value={\"ROLE_ADMIN\"} >ADMIN</MenuItem>\r\n                  </Select>\r\n\r\n                </FormControl>\r\n              </div>\r\n              <Button variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ marginLeft: \"57%\" }} onClick={updateUser}>\r\n                Modifier Utilisateur\r\n              </Button>\r\n              <br /><br />\r\n            </ form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserUpdate;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Layout\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\locals\\Locals.js",["273"],"import React from \"react\";\r\nimport { Grid ,Button} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { Dialog, DialogTitle, DialogContent, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst columns = [\r\n  {\r\n    label: \"Id\",\r\n    name: \"id\",\r\n    \r\n  },\r\n  {\r\n    \r\n    label: \"Nom\",\r\n    name: \"nom\",\r\n    \r\n  },\r\n  {\r\n    label: \"Description\",\r\n    name: \"description\",\r\n    \r\n  },\r\n  {\r\n    label: \"Adresse\",\r\n    name: \"adresse\",\r\n    \r\n  },\r\n  {\r\n    label:\"Max Adulte\",\r\n    name:\"maxAdulte\"\r\n  },\r\n  {\r\n    label:\"Max Enfant\",\r\n    name:\"maxEnfant\"\r\n  },\r\n  {\r\n    label: \"Type\",\r\n    name: \"type.label\",\r\n    \r\n  }\r\n]\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\nconst baseURL = \"http://127.0.0.1:8000/locals/\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/local\";\r\nexport default function Locals(props) {\r\n  const classes = useStyles();\r\n  const [locals, setLocals] = React.useState([]);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [openPopup, setOpenPopup] = React.useState(false);\r\n  const [rowData, setRowData]= React.useState([]);\r\n  const fetchData = async () => {\r\n    await axios.get(baseURL).then((response)=>{\r\n      setLocals(response.data);\r\n      console.log(response.data)\r\n    })\r\n  }\r\nReact.useEffect(() => {\r\n  const fetchData = async () => {\r\n    await axios.get(baseURL).then((response)=>{\r\n      setLocals(response.data);\r\n      console.log(response.data)\r\n    })\r\n    \r\n\r\n}\r\nfetchData()\r\n \r\n}, []);\r\n  \r\nconst onRowClick = (rowData, rowMeta) => {\r\n  setOpenPopup(true)\r\n  setRowData(rowData);\r\n}\r\nconst updateLoc=()=>{\r\n  console.log(\"----RowClick\");\r\n  console.log(\"rowData: \", rowData[0]);\r\n  props.history.push({\r\n    pathname: `/app/updateLocal/${rowData[0]}`})\r\n}\r\nconst addTarif=()=>{\r\n  console.log(\"----RowClick\");\r\n  console.log(\"rowData: \", rowData);\r\n  props.history.push({\r\n    pathname: `/app/local/${rowData[0]}/tarifs`})\r\n \r\n}\r\n  \r\n  const deleteItem=async (uId)=>{\r\n    axios\r\n  .delete(baseURL1+'/'+uId)\r\n  .then(() => {\r\n    fetchData()\r\n    \r\n  });\r\n}\r\n\r\n  const onRowSelectionChange = (curRowSelected, allRowsSelected) => {\r\n    console.log(\"All Selected: \", allRowsSelected);\r\n    let ids=[];\r\n    allRowsSelected.map((item)=>{\r\n      ids.push(locals[item.index].id)\r\n    })\r\n    setSelected(ids)\r\n  }\r\n  const onRowsDelete= (rowsDeleted, newData) => {\r\n    console.log('rowsDeleted');\r\n    console.log(selected);\r\n    selected.forEach((item,index)=>{\r\n      deleteItem(item)\r\n    })\r\n    console.log(locals[rowsDeleted.data[0].index].id)\r\n  }\r\n  const options = {\r\n\t\tfilterType: 'checkbox',\r\n\t\tonRowClick: onRowClick,\r\n    enableNestedDataAccess: '.',\r\n\t\tonRowSelectionChange: onRowSelectionChange,\r\n    onRowsDelete:onRowsDelete\r\n    \r\n\t};\r\n \r\n  return (\r\n    <>\r\n      <PageTitle title=\"Liste des locaux\" button={<Link to=\"/app/addLocal\"><Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      color=\"secondary\"\r\n    ><Add></Add></Button></Link>}/>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Liste des locaux\"\r\n            data={locals}\r\n            columns={columns}\r\n            options={options}\r\n          />\r\n        </Grid>\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        Modification\r\n                    </Typography>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Button>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n            <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"10%\"}}  onClick={updateLoc}>\r\n               Modifier le local\r\n               </Button><br /><br />\r\n              <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"10%\" }} onClick={addTarif}  >\r\n               Ajouter des tarifs\r\n               </Button>\r\n            </DialogContent>\r\n        </Dialog>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\tables\\Tables.js",["274","275"],"import React from \"react\";\r\nimport { Grid ,Button} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\n\r\n\r\n\r\nimport { Add } from \"@material-ui/icons\";\r\n\r\n\r\nconst columns = [\r\n  {\r\n    label: \"Id\",\r\n    name: \"id\",\r\n    \r\n  },\r\n  {\r\n    \r\n    label: \"Prenom\",\r\n    name: \"firstName\",\r\n    \r\n  },\r\n  {\r\n    label: \"Nom\",\r\n    name: \"lastName\",\r\n    \r\n  },\r\n  {\r\n    label: \"Email\",\r\n    name: \"email\",\r\n    \r\n  },\r\n  {\r\n    label: \"N° Telephone\",\r\n    name: \"phoneNumber\",\r\n    \r\n  },\r\n  {\r\n    label: \"N° d'adhésion\",\r\n    name: \"numAdesion\",\r\n    \r\n  }\r\n]\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\nconst baseURL = \"http://127.0.0.1:8000/users/\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/user\";\r\nexport default function Tables(props) {\r\n  const classes = useStyles();\r\n  const [users, setUsers] = React.useState([]);\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  const fetchData = async () => {\r\n    await axios.get(baseURL).then((response)=>{\r\n      setUsers(response.data);\r\n      console.log(response.data)\r\n    })\r\n  }\r\nReact.useEffect(() => {\r\n  console.log(localStorage.getItem(\"id_token\"))\r\n  const fetchData = async () => {\r\n    await axios.get(baseURL).then((response)=>{\r\n      setUsers(response.data);\r\n      console.log(response.data)\r\n    })\r\n    \r\n\r\n}\r\nfetchData()\r\n \r\n}, []);\r\n  \r\n  const onRowClick = (rowData, rowMeta) => {\r\n    console.log(\"----RowClick\");\r\n    console.log(\"rowData: \", rowData);\r\n    console.log(\"rowMeta: \", rowMeta);\r\n     props.history.push({\r\n     pathname: `/app/updateUser/${rowData[0]}`,\r\n     \r\n    })\r\n  }\r\n  const deleteItem=async (uId)=>{\r\n    axios\r\n  .delete(baseURL1+'/'+uId)\r\n  .then(() => {\r\n    fetchData()\r\n    \r\n  });\r\n}\r\n  const onRowSelectionChange = (curRowSelected, allRowsSelected) => {\r\n    console.log(\"All Selected: \", allRowsSelected);\r\n    let ids=[];\r\n    allRowsSelected.map((item)=>{\r\n      ids.push(users[item.index].id)\r\n    })\r\n    setSelected(ids)\r\n  }\r\n  const onRowsDelete= (rowsDeleted, newData) => {\r\n    console.log('rowsDeleted');\r\n    console.log(selected);\r\n    selected.forEach((item,index)=>{\r\n      deleteItem(item)\r\n    })\r\n    console.log(users[rowsDeleted.data[0].index].id)\r\n  }\r\n  const options = {\r\n\t\tfilterType: 'checkbox',\r\n\t\tonRowClick: onRowClick,\r\n\t\tonRowSelectionChange: onRowSelectionChange,\r\n    onRowsDelete:onRowsDelete\r\n    \r\n\t};\r\n \r\n  return (\r\n    <>\r\n      <PageTitle title=\"Liste des Utilisateur\" button={<Link to=\"/app/addUser\"><Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      color=\"secondary\"\r\n    ><Add></Add></Button></Link>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Liste des Utilisateur\"\r\n            data={users}\r\n            columns={columns}\r\n            options={options}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\typography\\Typography.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\Sidebar.js",["276","277","278","279","280","281","282","283","284"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  \r\n} from \"@material-ui/icons\";\r\n\r\nimport StyleIcon from '@material-ui/icons/Style';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  \r\n  \r\n  { id: 2, label: \" Utilisateur\", link: \"/app/users\", icon: <SupervisorAccountIcon /> },\r\n  { id: 3, label: \"Locaux\", link: \"/app/locals\", icon: <HomeIcon /> },\r\n  { id: 4, label: \"Types\", link: \"/app/types\", icon: <StyleIcon />  },\r\n  { id: 5, label: \"Reservations\", link: \"/app/reservations\", icon: <StyleIcon />  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Header\\Header.js",["285","286"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Dashboard Admin Club UCA\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Header\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\typography\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\maps\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Notification\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Widget\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\login\\Login.js",["287","288","289","290","291","292","293","294","295","296"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport classnames from \"classnames\";\r\n\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/auth/connect\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\r\n  var [passwordValue, setPasswordValue] = useState(\"password\");\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n    password:\"\"\r\n  });\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    console.log(values)\r\n  };\r\n  const connect = async (e) => {\r\n    e.preventDefault()\r\n    const sendData= async ()=>{\r\n      await axios.post(baseURL1,values).then((response) => {\r\n        console.log(response.data)\r\n       \r\n        loginUser(\r\n          response.data.token,\r\n          userDispatch,\r\n          values.email,\r\n          values.password,\r\n          props.history,\r\n          setIsLoading,\r\n          setError,\r\n        )\r\n      });\r\n    }\r\n    sendData()\r\n  }\r\n\r\n  const [visiblePass, setVisiblePass] = React.useState(false);\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer} style={{backgroundColor:\"#944422\"}}>\r\n        <Typography className={classes.logotypeText}>Club UCA</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n         \r\n          \r\n            <React.Fragment>\r\n              <Typography variant=\"h3\" className={classes.greeting}>\r\n                Bienvenue à la platforme de gestion Backoffice de Club UCA\r\n              </Typography>\r\n             \r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                \r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-mail\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-mail\"\r\n                  value={values.email}\r\n                  onChange={handleChange('email')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <EmailIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  <br /><br />\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                Mot de passe\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-password-input\"\r\n                  value={values.password}\r\n                  type={ visiblePass ?\"text\" : \"password\"}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('password')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\"\r\n                        onClick={()=>setVisiblePass(!visiblePass)}\r\n                        >\r\n                           {visiblePass ? <VisibilityOffIcon  /> :<VisibilityIcon />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={connect}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Forget Password\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          \r\n         \r\n        </div>\r\n      \r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\login\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\reservations\\reservations.js",[],{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","severity":1,"message":"302","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":20},{"ruleId":"301","severity":1,"message":"305","line":2,"column":9,"nodeType":"303","messageId":"304","endLine":2,"endColumn":13},{"ruleId":"301","severity":1,"message":"306","line":2,"column":16,"nodeType":"303","messageId":"304","endLine":2,"endColumn":25},{"ruleId":"307","severity":1,"message":"308","line":56,"column":7,"nodeType":"309","endLine":56,"endColumn":44},{"ruleId":"301","severity":1,"message":"310","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":26},{"ruleId":"301","severity":1,"message":"311","line":2,"column":19,"nodeType":"303","messageId":"304","endLine":2,"endColumn":29},{"ruleId":"301","severity":1,"message":"312","line":7,"column":9,"nodeType":"303","messageId":"304","endLine":7,"endColumn":30},{"ruleId":"301","severity":1,"message":"313","line":7,"column":32,"nodeType":"303","messageId":"304","endLine":7,"endColumn":51},{"ruleId":"301","severity":1,"message":"314","line":11,"column":9,"nodeType":"303","messageId":"304","endLine":11,"endColumn":17},{"ruleId":"301","severity":1,"message":"315","line":44,"column":11,"nodeType":"303","messageId":"304","endLine":44,"endColumn":23},{"ruleId":"316","severity":1,"message":"317","line":71,"column":28,"nodeType":"318","messageId":"319","endLine":71,"endColumn":30},{"ruleId":"316","severity":1,"message":"317","line":75,"column":33,"nodeType":"318","messageId":"319","endLine":75,"endColumn":35},{"ruleId":"316","severity":1,"message":"320","line":95,"column":10,"nodeType":"318","messageId":"319","endLine":95,"endColumn":12},{"ruleId":"316","severity":1,"message":"317","line":100,"column":16,"nodeType":"318","messageId":"319","endLine":100,"endColumn":18},{"ruleId":"316","severity":1,"message":"317","line":107,"column":23,"nodeType":"318","messageId":"319","endLine":107,"endColumn":25},{"ruleId":"321","severity":1,"message":"322","line":18,"column":14,"nodeType":"309","endLine":18,"endColumn":26},{"ruleId":"321","severity":1,"message":"322","line":19,"column":14,"nodeType":"309","endLine":19,"endColumn":26},{"ruleId":"321","severity":1,"message":"322","line":20,"column":14,"nodeType":"309","endLine":20,"endColumn":26},{"ruleId":"321","severity":1,"message":"322","line":21,"column":14,"nodeType":"309","endLine":21,"endColumn":26},{"ruleId":"321","severity":1,"message":"322","line":22,"column":14,"nodeType":"309","endLine":22,"endColumn":26},{"ruleId":"301","severity":1,"message":"323","line":3,"column":16,"nodeType":"303","messageId":"304","endLine":3,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":28,"column":33,"nodeType":"318","messageId":"319","endLine":28,"endColumn":35},{"ruleId":"321","severity":1,"message":"322","line":30,"column":15,"nodeType":"309","endLine":30,"endColumn":74},{"ruleId":"316","severity":1,"message":"317","line":30,"column":46,"nodeType":"318","messageId":"319","endLine":30,"endColumn":48},{"ruleId":"324","severity":1,"message":"325","line":36,"column":10,"nodeType":"309","endLine":36,"endColumn":90},{"ruleId":"321","severity":1,"message":"322","line":38,"column":10,"nodeType":"309","endLine":38,"endColumn":22},{"ruleId":"324","severity":1,"message":"325","line":38,"column":22,"nodeType":"309","endLine":38,"endColumn":100},{"ruleId":"301","severity":1,"message":"326","line":5,"column":3,"nodeType":"303","messageId":"304","endLine":5,"endColumn":11},{"ruleId":"301","severity":1,"message":"327","line":9,"column":14,"nodeType":"303","messageId":"304","endLine":9,"endColumn":24},{"ruleId":"301","severity":1,"message":"305","line":9,"column":26,"nodeType":"303","messageId":"304","endLine":9,"endColumn":30},{"ruleId":"301","severity":1,"message":"328","line":10,"column":8,"nodeType":"303","messageId":"304","endLine":10,"endColumn":12},{"ruleId":"301","severity":1,"message":"326","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":18},{"ruleId":"301","severity":1,"message":"329","line":3,"column":18,"nodeType":"303","messageId":"304","endLine":3,"endColumn":23},{"ruleId":"330","severity":1,"message":"331","line":130,"column":6,"nodeType":"332","endLine":130,"endColumn":8,"suggestions":"333"},{"ruleId":"316","severity":1,"message":"320","line":156,"column":103,"nodeType":"318","messageId":"319","endLine":156,"endColumn":105},{"ruleId":"316","severity":1,"message":"320","line":156,"column":169,"nodeType":"318","messageId":"319","endLine":156,"endColumn":171},{"ruleId":"316","severity":1,"message":"320","line":156,"column":222,"nodeType":"318","messageId":"319","endLine":156,"endColumn":224},{"ruleId":"301","severity":1,"message":"334","line":176,"column":11,"nodeType":"303","messageId":"304","endLine":176,"endColumn":17},{"ruleId":"316","severity":1,"message":"320","line":179,"column":18,"nodeType":"318","messageId":"319","endLine":179,"endColumn":20},{"ruleId":"316","severity":1,"message":"317","line":263,"column":84,"nodeType":"318","messageId":"319","endLine":263,"endColumn":86},{"ruleId":"316","severity":1,"message":"317","line":264,"column":28,"nodeType":"318","messageId":"319","endLine":264,"endColumn":30},{"ruleId":"330","severity":1,"message":"335","line":82,"column":6,"nodeType":"332","endLine":82,"endColumn":8,"suggestions":"336"},{"ruleId":"316","severity":1,"message":"317","line":93,"column":13,"nodeType":"318","messageId":"319","endLine":93,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":96,"column":24,"nodeType":"318","messageId":"319","endLine":96,"endColumn":26},{"ruleId":"301","severity":1,"message":"305","line":8,"column":10,"nodeType":"303","messageId":"304","endLine":8,"endColumn":14},{"ruleId":"301","severity":1,"message":"337","line":11,"column":8,"nodeType":"303","messageId":"304","endLine":11,"endColumn":33},{"ruleId":"301","severity":1,"message":"338","line":18,"column":5,"nodeType":"303","messageId":"304","endLine":18,"endColumn":9},{"ruleId":"301","severity":1,"message":"339","line":20,"column":5,"nodeType":"303","messageId":"304","endLine":20,"endColumn":12},{"ruleId":"316","severity":1,"message":"317","line":94,"column":10,"nodeType":"318","messageId":"319","endLine":94,"endColumn":12},{"ruleId":"340","severity":1,"message":"341","line":123,"column":31,"nodeType":"342","messageId":"343","endLine":123,"endColumn":33},{"ruleId":"301","severity":1,"message":"326","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":18},{"ruleId":"330","severity":1,"message":"344","line":71,"column":6,"nodeType":"332","endLine":71,"endColumn":8,"suggestions":"345"},{"ruleId":"316","severity":1,"message":"317","line":84,"column":13,"nodeType":"318","messageId":"319","endLine":84,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":87,"column":24,"nodeType":"318","messageId":"319","endLine":87,"endColumn":26},{"ruleId":"301","severity":1,"message":"334","line":99,"column":11,"nodeType":"303","messageId":"304","endLine":99,"endColumn":17},{"ruleId":"301","severity":1,"message":"346","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":17},{"ruleId":"301","severity":1,"message":"347","line":42,"column":7,"nodeType":"303","messageId":"304","endLine":42,"endColumn":14},{"ruleId":"316","severity":1,"message":"320","line":74,"column":27,"nodeType":"318","messageId":"319","endLine":74,"endColumn":29},{"ruleId":"316","severity":1,"message":"317","line":74,"column":39,"nodeType":"318","messageId":"319","endLine":74,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":74,"column":71,"nodeType":"318","messageId":"319","endLine":74,"endColumn":73},{"ruleId":"316","severity":1,"message":"317","line":76,"column":29,"nodeType":"318","messageId":"319","endLine":76,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":86,"column":12,"nodeType":"318","messageId":"319","endLine":86,"endColumn":14},{"ruleId":"348","severity":1,"message":"349","line":91,"column":6,"nodeType":"350","messageId":"351","endLine":91,"endColumn":52},{"ruleId":"316","severity":1,"message":"317","line":91,"column":38,"nodeType":"318","messageId":"319","endLine":91,"endColumn":40},{"ruleId":"348","severity":1,"message":"349","line":93,"column":12,"nodeType":"350","messageId":"351","endLine":93,"endColumn":57},{"ruleId":"316","severity":1,"message":"317","line":93,"column":44,"nodeType":"318","messageId":"319","endLine":93,"endColumn":46},{"ruleId":"301","severity":1,"message":"334","line":100,"column":11,"nodeType":"303","messageId":"304","endLine":100,"endColumn":17},{"ruleId":"330","severity":1,"message":"352","line":74,"column":6,"nodeType":"332","endLine":74,"endColumn":8,"suggestions":"353"},{"ruleId":"301","severity":1,"message":"354","line":91,"column":9,"nodeType":"303","messageId":"304","endLine":91,"endColumn":32},{"ruleId":"301","severity":1,"message":"355","line":95,"column":9,"nodeType":"303","messageId":"304","endLine":95,"endColumn":32},{"ruleId":"301","severity":1,"message":"334","line":98,"column":11,"nodeType":"303","messageId":"304","endLine":98,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":112,"column":31,"nodeType":"342","messageId":"343","endLine":112,"endColumn":33},{"ruleId":"301","severity":1,"message":"356","line":57,"column":9,"nodeType":"303","messageId":"304","endLine":57,"endColumn":16},{"ruleId":"340","severity":1,"message":"341","line":101,"column":31,"nodeType":"342","messageId":"343","endLine":101,"endColumn":33},{"ruleId":"301","severity":1,"message":"357","line":5,"column":24,"nodeType":"303","messageId":"304","endLine":5,"endColumn":41},{"ruleId":"301","severity":1,"message":"358","line":6,"column":17,"nodeType":"303","messageId":"304","endLine":6,"endColumn":31},{"ruleId":"301","severity":1,"message":"359","line":7,"column":17,"nodeType":"303","messageId":"304","endLine":7,"endColumn":31},{"ruleId":"301","severity":1,"message":"360","line":8,"column":16,"nodeType":"303","messageId":"304","endLine":8,"endColumn":25},{"ruleId":"301","severity":1,"message":"361","line":9,"column":21,"nodeType":"303","messageId":"304","endLine":9,"endColumn":32},{"ruleId":"301","severity":1,"message":"362","line":10,"column":19,"nodeType":"303","messageId":"304","endLine":10,"endColumn":30},{"ruleId":"301","severity":1,"message":"363","line":11,"column":18,"nodeType":"303","messageId":"304","endLine":11,"endColumn":25},{"ruleId":"301","severity":1,"message":"337","line":21,"column":8,"nodeType":"303","messageId":"304","endLine":21,"endColumn":33},{"ruleId":"301","severity":1,"message":"364","line":27,"column":8,"nodeType":"303","messageId":"304","endLine":27,"endColumn":11},{"ruleId":"301","severity":1,"message":"305","line":10,"column":3,"nodeType":"303","messageId":"304","endLine":10,"endColumn":7},{"ruleId":"301","severity":1,"message":"365","line":27,"column":29,"nodeType":"303","messageId":"304","endLine":27,"endColumn":35},{"ruleId":"301","severity":1,"message":"366","line":18,"column":8,"nodeType":"303","messageId":"304","endLine":18,"endColumn":18},{"ruleId":"301","severity":1,"message":"367","line":21,"column":10,"nodeType":"303","messageId":"304","endLine":21,"endColumn":20},{"ruleId":"301","severity":1,"message":"368","line":28,"column":8,"nodeType":"303","messageId":"304","endLine":28,"endColumn":12},{"ruleId":"301","severity":1,"message":"369","line":29,"column":8,"nodeType":"303","messageId":"304","endLine":29,"endColumn":14},{"ruleId":"301","severity":1,"message":"370","line":44,"column":8,"nodeType":"303","messageId":"304","endLine":44,"endColumn":19},{"ruleId":"301","severity":1,"message":"371","line":44,"column":21,"nodeType":"303","messageId":"304","endLine":44,"endColumn":35},{"ruleId":"301","severity":1,"message":"372","line":45,"column":8,"nodeType":"303","messageId":"304","endLine":45,"endColumn":17},{"ruleId":"301","severity":1,"message":"373","line":45,"column":19,"nodeType":"303","messageId":"304","endLine":45,"endColumn":31},{"ruleId":"301","severity":1,"message":"374","line":46,"column":20,"nodeType":"303","messageId":"304","endLine":46,"endColumn":33},{"ruleId":"301","severity":1,"message":"375","line":47,"column":23,"nodeType":"303","messageId":"304","endLine":47,"endColumn":39},"no-native-reassign",["376"],"no-negated-in-lhs",["377"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'Controller' is defined but never used.","'NotificationContainer' is defined but never used.","'NotificationManager' is defined but never used.","'formData' is assigned a value but never used.","'handleChange' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Router' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Redirect' is defined but never used.","'IconButton' is defined but never used.","'Icon' is defined but never used.","'Build' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'id.id' and 'values'. Either include them or remove the dependency array.","ArrayExpression",["378"],"'action' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'id' and 'types'. Either include them or remove the dependency array.",["379"],"'AccountCircleOutlinedIcon' is defined but never used.","'Card' is defined but never used.","'Divider' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has a missing dependency: 'types'. Either include it or remove the dependency array.",["380"],"'TextField' is defined but never used.","'baseURL' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["381"],"'handleClickShowPassword' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","'classes' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Button' is defined but never used.","'classnames' is defined but never used.","'makeStyles' is defined but never used.","'logo' is defined but never used.","'google' is defined but never used.","'activeTabId' is assigned a value but never used.","'setActiveTabId' is assigned a value but never used.","'nameValue' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","'setLoginValue' is assigned a value but never used.","'setPasswordValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},"Update the dependencies array to be: [id.id, values]",{"range":"390","text":"391"},"Update the dependencies array to be: [id, types]",{"range":"392","text":"393"},"Update the dependencies array to be: [types]",{"range":"394","text":"395"},"Update the dependencies array to be: [id]",{"range":"396","text":"397"},[3240,3242],"[id.id, values]",[2256,2258],"[id, types]",[1776,1778],"[types]",[1977,1979],"[id]"]