[{"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\serviceWorker.js":"2","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\context\\LayoutContext.js":"3","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\context\\UserContext.js":"4","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\App.js":"5","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\themes\\index.js":"6","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\home\\Home.js":"7","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\loginClt\\LoginClt.js":"8","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Layout\\Layout.js":"9","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\login\\Login.js":"10","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\parallax\\Parallax.js":"11","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\reservations\\reservations.js":"12","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\PageTitle\\PageTitle.js":"13","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\PageTitle\\styles.js":"14","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Wrappers\\Wrappers.js":"15","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\login\\styles.js":"16","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Layout\\styles.js":"17","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\types\\Types.js":"18","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\addTarifs\\AddTarifs.js":"19","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\localAdd\\LocalAdd.js":"20","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userAdd\\UserAdd.js":"21","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userUpdate\\UserUpdate.js":"22","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\localUpdate\\LocalUpdate.js":"23","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\locals\\Locals.js":"24","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\tables\\Tables.js":"25","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\Sidebar.js":"26","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\sliderBook\\SliderBook.js":"27","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Header\\Header.js":"28","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\footer\\Footer.js":"29","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\header\\Header.js":"30","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\themes\\default.js":"31","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\Dot.js":"32","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Header\\styles.js":"33","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"34","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\UserAvatar\\UserAvatar.js":"35","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Notification\\Notification.js":"36","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\styles.js":"37","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"38","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Notification\\styles.js":"39","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\UserAvatar\\styles.js":"40","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\loginClt\\firebase.js":"41","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\reservations\\calendar.js":"42","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\reservations\\dialogComponent.js":"43","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userSpace\\userSpace.js":"44"},{"size":896,"mtime":1638377405451,"results":"45","hashOfConfig":"46"},{"size":5083,"mtime":1638377405485,"results":"47","hashOfConfig":"46"},{"size":1444,"mtime":1638377405450,"results":"48","hashOfConfig":"46"},{"size":2967,"mtime":1643195538441,"results":"49","hashOfConfig":"46"},{"size":2380,"mtime":1643192360902,"results":"50","hashOfConfig":"46"},{"size":534,"mtime":1638377405487,"results":"51","hashOfConfig":"46"},{"size":2317,"mtime":1643193681580,"results":"52","hashOfConfig":"46"},{"size":5917,"mtime":1643193279639,"results":"53","hashOfConfig":"46"},{"size":2514,"mtime":1643111995364,"results":"54","hashOfConfig":"46"},{"size":5960,"mtime":1641940463654,"results":"55","hashOfConfig":"46"},{"size":2354,"mtime":1643193507018,"results":"56","hashOfConfig":"46"},{"size":2632,"mtime":1642157857941,"results":"57","hashOfConfig":"46"},{"size":447,"mtime":1638377405435,"results":"58","hashOfConfig":"46"},{"size":482,"mtime":1638377405436,"results":"59","hashOfConfig":"46"},{"size":3971,"mtime":1638377405448,"results":"60","hashOfConfig":"46"},{"size":3281,"mtime":1638377405473,"results":"61","hashOfConfig":"46"},{"size":710,"mtime":1638377405432,"results":"62","hashOfConfig":"46"},{"size":9446,"mtime":1642106037562,"results":"63","hashOfConfig":"46"},{"size":10283,"mtime":1642106476383,"results":"64","hashOfConfig":"46"},{"size":9446,"mtime":1642106236750,"results":"65","hashOfConfig":"46"},{"size":11706,"mtime":1642105909663,"results":"66","hashOfConfig":"46"},{"size":9524,"mtime":1642105713545,"results":"67","hashOfConfig":"46"},{"size":10079,"mtime":1642105439114,"results":"68","hashOfConfig":"46"},{"size":5947,"mtime":1642104626726,"results":"69","hashOfConfig":"46"},{"size":4306,"mtime":1642105605279,"results":"70","hashOfConfig":"46"},{"size":3566,"mtime":1642111025282,"results":"71","hashOfConfig":"46"},{"size":7141,"mtime":1643138122743,"results":"72","hashOfConfig":"46"},{"size":6245,"mtime":1642110692487,"results":"73","hashOfConfig":"46"},{"size":1034,"mtime":1643194690616,"results":"74","hashOfConfig":"46"},{"size":1934,"mtime":1643194876408,"results":"75","hashOfConfig":"46"},{"size":3127,"mtime":1642111160428,"results":"76","hashOfConfig":"46"},{"size":902,"mtime":1638377405439,"results":"77","hashOfConfig":"46"},{"size":4043,"mtime":1638377405430,"results":"78","hashOfConfig":"46"},{"size":4589,"mtime":1638377405440,"results":"79","hashOfConfig":"46"},{"size":620,"mtime":1638377405443,"results":"80","hashOfConfig":"46"},{"size":3413,"mtime":1638377405433,"results":"81","hashOfConfig":"46"},{"size":1363,"mtime":1638377405442,"results":"82","hashOfConfig":"46"},{"size":1474,"mtime":1638377405441,"results":"83","hashOfConfig":"46"},{"size":1040,"mtime":1638377405434,"results":"84","hashOfConfig":"46"},{"size":291,"mtime":1638377405444,"results":"85","hashOfConfig":"46"},{"size":453,"mtime":1641464579325,"results":"86","hashOfConfig":"46"},{"size":1627,"mtime":1642157343328,"results":"87","hashOfConfig":"46"},{"size":4314,"mtime":1642158385189,"results":"88","hashOfConfig":"46"},{"size":3377,"mtime":1643194339079,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"xnuyxl",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"92"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\index.js",[],["195","196"],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\serviceWorker.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\context\\LayoutContext.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\context\\UserContext.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\App.js",["197"],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\themes\\index.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\home\\Home.js",["198","199","200","201","202"],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\loginClt\\LoginClt.js",["203","204","205","206","207","208","209"],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Layout\\Layout.js",["210","211","212","213"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Tables from \"../../pages/tables\";\r\nimport Locals from \"../../pages/locals\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport UserUpdate from \"../../pages/userUpdate/UserUpdate\";\r\nimport UserAdd from \"../../pages/userAdd/UserAdd\";\r\nimport LocalAdd from \"../../pages/localAdd/LocalAdd\";\r\nimport LocalUpdate from \"../../pages/localUpdate/LocalUpdate\";\r\nimport Types from \"../../pages/types/Types\";\r\nimport AddTarif from \"../../pages/addTarifs/AddTarifs\";\r\nimport Reservations from \"../../pages/reservations/reservations\";\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/Users\" component={Tables} />\r\n              <Route path=\"/app/local/:id/tarifs\" component={AddTarif} />\r\n              <Route path=\"/app/locals\" component={Locals} />\r\n              <Route path=\"/app/types\" component={Types} />\r\n              <Route path=\"/app/addLocal\" component={LocalAdd} />\r\n              <Route path=\"/app/updateUser/:id\" component={UserUpdate} />\r\n              <Route path=\"/app/addUser\" component={UserAdd} />\r\n              <Route path=\"/app/updateLocal/:id\" component={LocalUpdate} />\r\n              <Route path=\"/app/reservations\" component={Reservations} />\r\n             \r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n             \r\n              <div>\r\n               \r\n               \r\n               \r\n              </div>\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\login\\Login.js",["214","215","216","217","218","219","220","221","222","223"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport classnames from \"classnames\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/auth/connect\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\r\n  var [passwordValue, setPasswordValue] = useState(\"password\");\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n    password:\"\"\r\n  });\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    console.log(values)\r\n  };\r\n  const connect = async (e) => {\r\n    e.preventDefault()\r\n    const sendData= async ()=>{\r\n      await axios.post(baseURL1,values).then((response) => {\r\n        console.log(response.data)\r\n       \r\n        loginUser(\r\n          response.data.token,\r\n          userDispatch,\r\n          values.email,\r\n          values.password,\r\n          props.history,\r\n          setIsLoading,\r\n          setError,\r\n        )\r\n      });\r\n    }\r\n    sendData()\r\n  }\r\n\r\n  const [visiblePass, setVisiblePass] = React.useState(false);\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer} style={{backgroundColor:\"#944422\"}}>\r\n        <Typography className={classes.logotypeText}>Club UCA</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n         \r\n          \r\n            <React.Fragment>\r\n              <Typography variant=\"h3\" className={classes.greeting}>\r\n                Bienvenue à la platforme de gestion Backoffice de Club UCA\r\n              </Typography>\r\n             \r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                \r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-mail\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-mail\"\r\n                  value={values.email}\r\n                  onChange={handleChange('email')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <EmailIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  <br /><br />\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                Mot de passe\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-password-input\"\r\n                  value={values.password}\r\n                  type={ visiblePass ?\"text\" : \"password\"}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('password')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\"\r\n                        onClick={()=>setVisiblePass(!visiblePass)}\r\n                        >\r\n                           {visiblePass ? <VisibilityOffIcon  /> :<VisibilityIcon />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={connect}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                \r\n              </div>\r\n            </React.Fragment>\r\n          \r\n         \r\n        </div>\r\n      \r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\parallax\\Parallax.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\reservations\\reservations.js",["224","225","226","227","228","229","230"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Calendar from \"./calendar\"\r\n// components\r\nimport \"./styles.css\";\r\n\r\n\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/reservation/etat/\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/reservation/accept/\";\r\nconst baseURL2 = \"http://127.0.0.1:8000/reservation/deny/\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    \r\n  }\r\n}))\r\n\r\n\r\n\r\nexport default function Reservations(props) {\r\n\r\n \r\n  const toTimestamp=(timeStamp_value)=>{\r\n    var theDate = new Date(timeStamp_value * 1000);\r\n    let dateString = theDate.toGMTString();\r\n    \r\n    return new Date((\r\n      theDate.getFullYear() + '-' + (theDate.getMonth() + 1) + '-' + theDate.getDate()\r\n    )).toISOString();\r\n  }\r\n  const accept=async ($id)=>{\r\n    await axios.put(baseURL1+$id).then((response)=>{\r\n      console.log(response.data)\r\n      fetchData()\r\n    })\r\n  }\r\n  const deny=async ($id)=>{\r\n    await axios.put(baseURL2+$id).then((response)=>{\r\n      console.log(response.data)\r\n      fetchData()\r\n    })\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  const [calendarEvents, setCalendarEvents] = React.useState([]);\r\n  const fetchData = async () => {\r\n    await axios.get(baseURL+0).then((response)=>{\r\n     \r\n    const events=response.data.map((item)=>{\r\n      if(item.resesrvationDetails.length!=0){ \r\n        //console.log(toTimestamp(item.resesrvationDetails[0].dateDebut))\r\n       return {\r\n          title: \"Reservation\",\r\n          id:item.id,\r\n          start: new Date(toTimestamp(item.resesrvationDetails[0].dateDebut)),\r\n          end: new Date(toTimestamp(item.resesrvationDetails[0].dateFin))\r\n        }\r\n      } \r\n      })\r\n      setCalendarEvents(events)\r\n    })\r\n    \r\n\r\n}\r\n \r\n    \r\n\r\n\r\nReact.useEffect(() => {\r\n  const fetchData = async () => {\r\n    await axios.get(baseURL+0).then((response)=>{\r\n     \r\n    const events=response.data.map((item)=>{\r\n      if(item.resesrvationDetails.length!=0){ \r\n        console.log(toTimestamp(item.resesrvationDetails[0].dateDebut))\r\n       return {\r\n          title: \"Reservation\",\r\n          id:item.id,\r\n          start: new Date(toTimestamp(item.resesrvationDetails[0].dateDebut)),\r\n          end: new Date(toTimestamp(item.resesrvationDetails[0].dateFin))\r\n        }\r\n      } \r\n      })\r\n      setCalendarEvents(events)\r\n    })\r\n    \r\n\r\n}\r\n\r\nfetchData()\r\n \r\n}, []);\r\n\r\n  return (\r\n    <>\r\n     <Calendar events={calendarEvents} accept={accept} deny={deny} />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\login\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Layout\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\types\\Types.js",["231","232","233","234","235","236","237","238","239","240","241","242"],"import React from \"react\";\r\nimport { Grid ,Button} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport { Dialog, DialogTitle, DialogContent, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport StyleIcon from '@material-ui/icons/Style';\r\nimport { useAlert } from \"react-alert\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport {\r\n    InputLabel,\r\n    InputAdornment,\r\n    IconButton,\r\n    Card,\r\n    FormControl,\r\n    Divider\r\n  } from '@material-ui/core';\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\n\r\n\r\n\r\nimport { Add } from \"@material-ui/icons\";\r\n\r\n\r\nconst columns = [\r\n  {\r\n    label: \"Id\",\r\n    name: \"id\",\r\n    \r\n  },\r\n  {\r\n    \r\n    label: \"Labelle\",\r\n    name: \"label\",\r\n    \r\n  },\r\n  {\r\n    \r\n    label: \"Type\",\r\n    name: \"type\",\r\n    \r\n  }\r\n  \r\n]\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(20)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    },\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n      }\r\n}))\r\n\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/api/types/\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/api/type\";\r\nexport default function Types(props) {\r\n  var userDispatch = useUserDispatch();\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const [types, setTypes] = React.useState([]);\r\n  const [label, setLabel] = React.useState(\"\");\r\n  const [type, setType] = React.useState(\"\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [mod, setMod] = React.useState(false);\r\n  const [id, setId] = React.useState();\r\n  const [openPopup, setOpenPopup] = React.useState(false);\r\n  \r\n  const fetchData = async () => {\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.get(baseURL,{ headers: {\"Authorization\" :token} }).then((response)=>{\r\n      setTypes(response.data);\r\n      console.log(response.data)\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\nReact.useEffect(() => {\r\n  const fetchData = async () => {\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.get(baseURL,{ headers: {\"Authorization\" :token} }).then((response)=>{\r\n      setTypes(response.data);\r\n      console.log(response.data)\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n}\r\nfetchData()\r\n \r\n}, []);\r\nconst handleChange = prop => event => {\r\n  if(prop==\"label\"){\r\n    setLabel(event.target.value);\r\n    console.log(label)\r\n  }else{\r\n    setType(event.target.value)\r\n  }\r\n    \r\n  };\r\n  const onRowClick = (rowData, rowMeta) => {\r\n    setMod(true)\r\n    setId(rowData[0])\r\n    console.log(\"----RowClick\");\r\n    console.log(\"rowData: \", rowData);\r\n    console.log(\"rowMeta: \", rowMeta);\r\n     setLabel(rowData[1])\r\n     setType(rowData[2])\r\n     setOpenPopup(true)\r\n  }\r\n  const deleteItem=async (uId)=>{\r\n    const token=localStorage.getItem('id_token');\r\n    axios\r\n  .delete(baseURL1+'/'+uId,{ headers: {\"Authorization\" :token} })\r\n  .then(() => {\r\n    fetchData()\r\n    \r\n  }).catch( (error)=> {\r\n    if (error.response) {\r\n      if(error.response.status==401){\r\n        alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n        signOut(userDispatch, props.history)\r\n      }\r\n     \r\n    }\r\n  });\r\n}\r\n  const onRowSelectionChange = (curRowSelected, allRowsSelected) => {\r\n    console.log(\"All Selected: \", allRowsSelected);\r\n    let ids=[];\r\n    allRowsSelected.map((item)=>{\r\n      ids.push(types[item.index].id)\r\n    })\r\n    setSelected(ids)\r\n  }\r\n  const updateType = async (e) => {\r\n    e.preventDefault()\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.put(baseURL1+'/'+id,{label:label,type:type},{ headers: {\"Authorization\" :token} }).then((response) => {\r\n        console.log(response.data)\r\n        setOpenPopup(false)\r\n        fetchData()\r\n        setLabel(\"\")\r\n      }).catch( (error)=> {\r\n        if (error.response) {\r\n          if(error.response.status==401){\r\n            alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n            signOut(userDispatch, props.history)\r\n          }\r\n         \r\n        }\r\n      });\r\n}\r\n  const onRowsDelete= (rowsDeleted, newData) => {\r\n    console.log('rowsDeleted');\r\n    console.log(selected);\r\n    selected.forEach((item,index)=>{\r\n      deleteItem(item)\r\n    })\r\n    console.log(types[rowsDeleted.data[0].index].id)\r\n  }\r\n  const options = {\r\n\t\tfilterType: 'checkbox',\r\n\t\tonRowClick: onRowClick,\r\n\t\tonRowSelectionChange: onRowSelectionChange,\r\n        onRowsDelete:onRowsDelete\r\n    \r\n\t};\r\n    const addType = async (e) => {\r\n        e.preventDefault()\r\n        const token=localStorage.getItem('id_token');\r\n        await axios.post(baseURL1,{label:label,type:type},{ headers: {\"Authorization\" :token} }).then((response) => {\r\n            console.log(response.data)\r\n            setOpenPopup(false)\r\n            fetchData()\r\n            setLabel(\"\")\r\n          }).catch( (error)=> {\r\n            if (error.response) {\r\n              if(error.response.status==401){\r\n                alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n                signOut(userDispatch, props.history)\r\n              }\r\n             \r\n            }\r\n          });\r\n    }\r\n \r\n  return (\r\n    <>\r\n      <PageTitle title=\"Liste des Types des locaux\" button={<Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      onClick={()=>{setOpenPopup(true) \r\n       setLabel(\"\")\r\n       setMod(false)\r\n    }}\r\n      color=\"secondary\"\r\n    ><Add></Add></Button>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Liste des Types des locaux\"\r\n            data={types}\r\n            columns={columns}\r\n            options={options}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {mod?\"Modifier\":\"Ajouter\"}\r\n                    </Typography>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Button>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n            <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-label\">\r\n                  Labelle\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-phone\"\r\n                  value={label}\r\n                  onChange={handleChange('label')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <LabelIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={180}\r\n                />\r\n              </FormControl> <br /><br />\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-label\">\r\n                  Type\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-phone\"\r\n                  value={type}\r\n                  onChange={handleChange('type')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <StyleIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={180}\r\n                />\r\n              </FormControl>  <br /><br />\r\n              <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"10%\"}} onClick={mod? updateType :addType} >\r\n               {mod?\"Modifier Type de local\":\"Ajouter Type de local\"}\r\n               </Button>\r\n            </DialogContent>\r\n        </Dialog>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\addTarifs\\AddTarifs.js",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"import React, { Fragment } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Delete, Build } from \"@material-ui/icons\";\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport {\r\n\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  Divider,\r\n  Button,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useAlert } from \"react-alert\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nconst styles = {\r\n  Icon: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  Paper: {\r\n    margin: \"auto\",\r\n    padding: 10,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    width: 500\r\n  }\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/api/local/tarif/\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/api/tarif/local/\";\r\nconst baseURL2 = \"http://127.0.0.1:8000/api/tarif/id/\";\r\nconst AddTarif = (props) => {\r\n  const id = useParams();\r\n  var userDispatch = useUserDispatch();\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const gridClass = \"fade-out\";\r\n  const cardStyle = {\r\n    width: \"95%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft: \"0px\",\r\n    marginTop: \"50px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    nbrEnfant: \"\",\r\n    nbrAdulte: \"\",\r\n    prix: \"\"\r\n  });\r\n  const [formState, setFormState] = React.useState(\"add\")\r\n  const fetchData = async () => {\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.get(baseURL1 + id.id, values,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n      setTarifs(response.data);\r\n      console.log(response.data)\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n  const [tarifs, setTarifs] = React.useState([]);\r\n  const addTarifs = async (e) => {\r\n    e.preventDefault()\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.put(baseURL + id.id,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n      console.log(response.data)\r\n      setTarifs([...tarifs, values]);\r\n      console.log(tarifs)\r\n      fetchData()\r\n      setValues({\r\n        nbrEnfant: \"\",\r\n        nbrAdulte: \"\",\r\n        prix: \"\"\r\n      })\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n\r\n  }\r\n  const [tarifId,setTarifId]=React.useState()\r\n  const updateTarif = async (item) => {\r\n\r\n    console.log(item.prix)\r\n    setFormState(\"update\")\r\n    setTarifId(item.id)\r\n    setValues({\r\n      nbrEnfant: item.nbrEnfant,\r\n      nbrAdulte: item.nbrAdulte,\r\n      prix: item.prix\r\n    })\r\n\r\n\r\n  }\r\n  const tarifsUpdate=async (e)=>{\r\n    console.log(\"updating......\")\r\n    e.preventDefault()\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.put(baseURL2 + tarifId, values,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n      console.log(response.data)\r\n      setTarifs([...tarifs, values]);\r\n      console.log(tarifs)\r\n      fetchData()\r\n      setValues({\r\n        nbrEnfant: \"\",\r\n        nbrAdulte: \"\",\r\n        prix: \"\"\r\n      })\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      const token=localStorage.getItem('id_token');\r\n      await axios.get(baseURL1 + id.id, { headers: {\"Authorization\" :token} }).then((response) => {\r\n        setTarifs(response.data);\r\n        console.log(response.data)\r\n      }).catch( (error)=> {\r\n        if (error.response) {\r\n          if(error.response.status==401){\r\n            alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n            signOut(userDispatch, props.history)\r\n          }\r\n         \r\n        }\r\n      });\r\n    }\r\n    fetchData()\r\n\r\n  }, []);\r\n  const handleChange = prop => event => {\r\n    \r\n    setValues({ ...values, [prop]: event.target.value});\r\n    console.log(values)\r\n  };\r\n  const deleteTarif = async (id) => {\r\n    setValues({\r\n      nbrEnfant: \"\",\r\n      nbrAdulte: \"\",\r\n      prix: \"\"\r\n    })\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.delete(baseURL2 + tarifId,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n      console.log(response.data)\r\n      fetchData()\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n  const listTarifs = tarifs.map((item) => {\r\n    return (\r\n      <Grid\r\n        xs={12}\r\n        className={`${gridClass}`}\r\n        key={item.id}\r\n        item\r\n        onClick={() => { updateTarif(item) }}>\r\n        <Paper elevation={2} style={styles.Paper}>\r\n          <span style={styles.Todo}> <p style={{ float: \"left\" }}>Nombre des adultes: {(tarifs.length != 0) ? item.nbrAdulte : \"\"} Nombre des enfants:  {(tarifs.length != 0) ? item.nbrEnfant : \"\"}  Prix : {(tarifs.length != 0) ? item.prix : \"\"}  </p></span>\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"Delete\"\r\n            onClick={() => deleteTarif(item.id)}\r\n          >\r\n            <Delete fontSize=\"small\" />\r\n          </IconButton >\r\n        </Paper><br />\r\n      </Grid>\r\n    )\r\n  })\r\n  const backToadd = () => {\r\n    setFormState(\"add\")\r\n    setValues({\r\n      nbrEnfant: \"\",\r\n      nbrAdulte: \"\",\r\n      prix: \"\"\r\n    })\r\n  }\r\n  const { action } = useParams();\r\n  return (\r\n    <Fragment>\r\n      {formState != \"add\" && <Button\r\n        variant=\"contained\"\r\n        size=\"medium\"\r\n        color=\"secondary\"\r\n        onClick={() => { backToadd() }}\r\n      >Retour vers l'ajout</Button>}\r\n      <Grid container>\r\n\r\n        <Grid item xs={5} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n            <form>\r\n              <Divider className=\"my-4\" />\r\n\r\n              <div >\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.nbrAdulte}\r\n                  type=\"number\"\r\n                  label=\" Nombre Adulte\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('nbrAdulte')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                \r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.nbrEnfant}\r\n                  type=\"number\"\r\n                  label=\" Nombre Enfants\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('nbrEnfant')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                    Prix\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-phone\"\r\n                    value={values.prix}\r\n                    onChange={handleChange('prix')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={180}\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n              <Button variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ marginLeft: \"57%\" }} onClick={formState == \"add\" ? addTarifs : tarifsUpdate}>\r\n                {formState == \"add\" ? \"Ajouter Tarif\" : \"Modifier Tarif\"}\r\n              </Button>\r\n              <br /><br />\r\n            </ form>\r\n          </Card>\r\n\r\n        </Grid>\r\n        <Grid xs={5} style={{ gap: \"1rem\", marginTop: \"50px\" }}>\r\n          {listTarifs}\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTarif;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\localAdd\\LocalAdd.js",["258","259","260","261","262","263","264","265"],"import React, { Fragment } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/menuitem';\r\nimport { useAlert } from \"react-alert\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  Divider,\r\n  Button,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useParams} from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/api/local\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/api/types/\";\r\nconst LocalAdd = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  var userDispatch = useUserDispatch();\r\n  const cardStyle={\r\n    width: \"100%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft:\"200px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    nom: \"\",\r\n    description: \"\",\r\n    adresse: \"\",\r\n    maxAdulte: \"\",\r\n    maxEnfant: \"\",\r\n    typeLabel: \"\",\r\n    type: 0\r\n  });\r\n  const [types, setTypes] = React.useState([]);\r\n\r\n  \r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      const token=localStorage.getItem('id_token');\r\n      await axios.get(baseURL1,{ headers: {\"Authorization\" :token} }).then((response)=>{\r\n        setTypes(response.data);\r\n        \r\n      }).catch( (error)=> {\r\n        if (error.response) {\r\n          if(error.response.status==401){\r\n            alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n            signOut(userDispatch, props.history)\r\n          }\r\n         \r\n        }\r\n      });\r\n    }\r\n    fetchData()\r\n    console.log(types)\r\n  }, []);\r\n    const addLocal = async (e) => {\r\n        e.preventDefault()\r\n        types.forEach(item=>{\r\n          if(item.label==values.typeLabel){\r\n            setValues({ ...values, type: item.type });\r\n          }\r\n        }\r\n          )\r\n        const token=localStorage.getItem('id_token');\r\n        await axios.post(baseURL,values,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n            console.log(response.data)\r\n            props.history.push({\r\n              pathname: \"/app/locals\"\r\n            })\r\n          }).catch( (error)=> {\r\n            if (error.response) {\r\n              if(error.response.status==401){\r\n                alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n                signOut(userDispatch, props.history)\r\n              }\r\n             \r\n            }\r\n          });\r\n    }\r\n    \r\n\r\n    const handleChange = prop => event => {\r\n      if(prop == \"typeLabel\"){\r\n        console.log(\"change label\")\r\n          types.forEach(item=>{\r\n            if(item.label==event.target.value){\r\n              setValues({ ...values, type: item.type });\r\n            }\r\n          }\r\n            )\r\n      }\r\n      setValues({ ...values, [prop]: event.target.value });\r\n      \r\n    };\r\n\r\n\r\n  const { action } = useParams();\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n        \r\n        <Grid item xs={12} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n        <form>\r\n            <Divider className=\"my-4\" />\r\n\r\n            <div >\r\n               <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-fname\">\r\n                  Nom du local\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-fname\"\r\n                  value={values.nom}\r\n                  onChange={handleChange('nom')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                         <DescriptionIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-lname\">\r\n                Description\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-lname\"\r\n                  value={values.description}\r\n                  onChange={handleChange('description')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <DescriptionIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                  Adresse\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-phone\"\r\n                  value={values.adresse}\r\n                  onChange={handleChange('adresse')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <PlaceIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={180}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.maxAdulte}\r\n                  type=\"number\"\r\n                  label=\" Max Adulte\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('maxAdulte')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                \r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.maxEnfant}\r\n                  type=\"number\"\r\n                  label=\" Max Enfants\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('maxEnfant')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n              <FormControl \r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                  <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.typeLabel}\r\n                    onChange={handleChange('typeLabel')}\r\n                  >\r\n                   {\r\n                   types.map(item=>\r\n                    <MenuItem value={item.label} key={item.type}>{item.label}</MenuItem>\r\n                  )\r\n                   }\r\n                  </Select>\r\n                </FormControl>\r\n               \r\n            </div>\r\n            <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"57%\"}} onClick={addLocal}>\r\n             Ajouter Local\r\n            </Button>\r\n            <br /><br />\r\n        </ form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LocalAdd;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userAdd\\UserAdd.js",["266","267","268","269","270","271","272","273","274","275","276","277","278"],"import React, { Fragment } from 'react';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/menuitem'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  FormControl,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport PhoneEnabledIcon from '@material-ui/icons/PhoneEnabled';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useParams} from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/api/user\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/auth/register\";\r\nconst UserAdd = (props) => {\r\n  var userDispatch = useUserDispatch();\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const cardStyle={\r\n    width: \"100%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft:\"200px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    firstName: \"\",\r\n    lastName:  \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    numAdesion: \"\",\r\n    role:\"\",\r\n    password:\"\"\r\n  });\r\n  const [visiblePass, setVisiblePass] = React.useState(false);\r\n  const [visiblePassC, setVisiblePassC] = React.useState(false);\r\n  const [pass, setPass] = React.useState(\"\");\r\n  const [isAdmin, setIsAdmin] = React.useState(false);\r\n    const addUser = async (e) => {\r\n        e.preventDefault()\r\n        const sendData= async ()=>{\r\n          const token=localStorage.getItem('id_token');\r\n          await axios.post(baseURL1,values,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n            console.log(response.data)\r\n            props.history.push({\r\n              pathname: \"/app/users\"\r\n            })\r\n          }).catch( (error)=> {\r\n            if (error.response) {\r\n              if(error.response.status==401){\r\n                alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n                signOut(userDispatch, props.history)\r\n              }\r\n             \r\n            }\r\n          });\r\n        }\r\n        if(values.password!=\"\" && pass==values.password && values.role==\"ROLE_ADMIN\"){\r\n          sendData()\r\n        }else if(values.role==\"ROLE_USER\"){\r\n          sendData()\r\n        }else{\r\n          console.log(\"mismatched password\")\r\n        }\r\n       \r\n    }\r\n    \r\n\r\n  const handleChange = prop => event => {\r\n    if(prop==\"pass\"){\r\n      setPass(event.target.value)\r\n    }else{\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  }\r\n  if(prop=\"role\"&& event.target.value==\"ROLE_ADMIN\"){\r\n     setIsAdmin(true)\r\n  }else if(prop=\"role\"&& event.target.value==\"ROLE_USER\"){\r\n    setIsAdmin(false)\r\n  }\r\n    console.log(values)\r\n  };\r\n\r\n\r\n  const { action } = useParams();\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n        \r\n        <Grid item xs={12} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n        <form>\r\n            <Divider className=\"my-4\" />\r\n\r\n            <div >\r\n            <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-fname\">\r\n                  Prenom\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-fname\"\r\n                  value={values.firstName}\r\n                  onChange={handleChange('firstName')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                         <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-lname\">\r\n                 Nom\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-lname\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange('lastName')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                  Numéro de Téléphone\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-phone\"\r\n                  value={values.phoneNumber}\r\n                  onChange={handleChange('phoneNumber')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <PhoneEnabledIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={180}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-mail\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-mail\"\r\n                  value={values.email}\r\n                  onChange={handleChange('email')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <EmailIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                  Numéro d'adhesion\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-adesion\"\r\n                  value={values.numAdesion}\r\n                  onChange={handleChange('numAdesion')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <DialpadIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n              <FormControl \r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\"\r\n                labelWidth={150}>\r\n                  <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.role}\r\n                    onChange={handleChange('role')}\r\n                  >\r\n                   \r\n                    <MenuItem value={\"ROLE_USER\"} >USER</MenuItem>\r\n                    <MenuItem value={\"ROLE_ADMIN\"} >ADMIN</MenuItem>\r\n                  </Select>\r\n                  \r\n                </FormControl>\r\n                {isAdmin && <div>\r\n                \r\n                <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                Mot de passe\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-password-input\"\r\n                  value={values.password}\r\n                  type={ visiblePass ?\"text\" : \"password\"}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('password')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\"\r\n                        onClick={()=>setVisiblePass(!visiblePass)}\r\n                        >\r\n                           {visiblePass ? <VisibilityOffIcon  /> :<VisibilityIcon />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                Confirmé le mot de passe\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-number\"\r\n                  value={pass}\r\n                  type={ visiblePassC ?\"text\" : \"password\"}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('pass')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\"\r\n                        onClick={()=>setVisiblePassC(!visiblePassC)}\r\n                        >\r\n                            {visiblePassC ? <VisibilityOffIcon  /> :<VisibilityIcon />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n\r\n               \r\n                </div>}\r\n            </div>\r\n            <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"57%\"}} onClick={addUser}>\r\n             Ajouter Utilisateur\r\n            </Button>\r\n            <br /><br />\r\n        </ form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserAdd;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userUpdate\\UserUpdate.js",["279","280","281","282","283","284"],"import React, { Fragment } from 'react';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/menuitem'\r\nimport PhoneEnabledIcon from '@material-ui/icons/PhoneEnabled';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  FormControl,\r\n  Button,\r\n  Divider\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/api/user\";\r\nconst UserUpdate = (props) => {\r\n\r\n  const id = useParams();\r\n   var userDispatch = useUserDispatch();\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const cardStyle = {\r\n    width: \"100%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft: \"200px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    numAdesion: \"\",\r\n    role: \"\"\r\n  });\r\n  React.useEffect(() => {\r\n    console.log(id)\r\n    const fetchData = async () => {\r\n      const token=localStorage.getItem('id_token');\r\n      await axios.get(baseURL + '/id/' + id.id,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n        setValues({\r\n          firstName: response.data.firstName,\r\n          lastName: response.data.lastName,\r\n          email: response.data.email,\r\n          phoneNumber: response.data.phoneNumber,\r\n          numAdesion: response.data.numAdesion,\r\n          role: response.data.roles[1]!=null ?response.data.roles[1]: response.data.roles[0]\r\n        })\r\n\r\n      }).catch( (error)=> {\r\n        if (error.response) {\r\n          if(error.response.status==401){\r\n            alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n            signOut(userDispatch, props.history)\r\n          }\r\n         \r\n        }\r\n      });\r\n\r\n    }\r\n    fetchData()\r\n\r\n  }, []);\r\n\r\n  const updateUser = async (e) => {\r\n    e.preventDefault()\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.put(baseURL + '/' + id.id, values,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n      console.log(response.data)\r\n      props.history.push({\r\n        pathname: \"/app/users\"\r\n      })\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    console.log(values)\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n  const { action } = useParams();\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n\r\n        <Grid item xs={12} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n            <form>\r\n              <Divider className=\"my-4\" />\r\n\r\n              <div >\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-fname\">\r\n                    Prenom\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-fname\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange('firstName')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-lname\">\r\n                    Nom\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-lname\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange('lastName')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                    Numéro de Téléphone\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-phone\"\r\n                    value={values.phoneNumber}\r\n                    onChange={handleChange('phoneNumber')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <PhoneEnabledIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={180}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-mail\">\r\n                    Email\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-mail\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <EmailIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-adesion\">\r\n                    Numéro d'adhesion\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-adesion\"\r\n                    value={values.numAdesion}\r\n                    onChange={handleChange('numAdesion')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <DialpadIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={150}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.role}\r\n                    onChange={handleChange('role')}\r\n                  >\r\n\r\n                    <MenuItem value={\"ROLE_USER\"} >USER</MenuItem>\r\n                    <MenuItem value={\"ROLE_ADMIN\"} >ADMIN</MenuItem>\r\n                  </Select>\r\n\r\n                </FormControl>\r\n              </div>\r\n              <Button variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ marginLeft: \"57%\" }} onClick={updateUser}>\r\n                Modifier Utilisateur\r\n              </Button>\r\n              <br /><br />\r\n            </ form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserUpdate;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\localUpdate\\LocalUpdate.js",["285","286","287","288","289","290"],"import React, { Fragment } from 'react';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/menuitem'\r\nimport { useAlert } from \"react-alert\";\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  Divider,\r\n  Button,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from 'react-router-dom';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\nconst baseURL = \"http://127.0.0.1:8000/api/local\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/api/types/\"; \r\nconst LocalUpdate = (props) => {\r\n  var userDispatch = useUserDispatch();\r\n  const alert = useAlert();\r\n  const id = useParams();\r\n  const classes = useStyles();\r\n  const cardStyle = {\r\n    width: \"100%\",\r\n    borderRadius: \"3%\",\r\n    marginLeft: \"200px\"\r\n  }\r\n  const [values, setValues] = React.useState({\r\n    nom: \"\",\r\n    description: \"\",\r\n    adresse: \"\",\r\n    maxAdulte: \"\",\r\n    maxEnfant: \"\",\r\n    typeLabel: \"\",\r\n    type: \"\"\r\n  });\r\n  const [types, setTypes] = React.useState([]);\r\n  React.useEffect(() => {\r\n    console.log(\"id\")\r\n    console.log(id)\r\n    const fetchData = async () => {\r\n      const token=localStorage.getItem('id_token');\r\n      await axios.get(baseURL + '/id/' + id.id,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n        setValues({\r\n          nom: response.data[0].nom,\r\n          description: response.data[0].description,\r\n          adresse: response.data[0].adresse,\r\n          maxAdulte: response.data[0].maxAdulte,\r\n          maxEnfant: response.data[0].maxEnfant,\r\n          typeLabel: response.data[0].type.label,\r\n          type: response.data[0].type.type\r\n        })\r\n        \r\n      }).catch( (error)=> {\r\n        if (error.response) {\r\n          if(error.response.status==401){\r\n            alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n            signOut(userDispatch, props.history)\r\n          }\r\n         \r\n        }\r\n      });\r\n      await axios.get(baseURL1,{ headers: {\"Authorization\" :token} }).then((response)=>{\r\n        setTypes(response.data);\r\n        \r\n      }).catch( (error)=> {\r\n        if (error.response) {\r\n          if(error.response.status==401){\r\n            alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n            signOut(userDispatch, props.history)\r\n          }\r\n         \r\n        }\r\n      });\r\n    }\r\n    fetchData()\r\n    console.log(types)\r\n  }, []);\r\n  const updateLocal = async (e) => {\r\n    e.preventDefault()\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.put(baseURL + '/' + id.id, values,{ headers: {\"Authorization\" :token} }).then((response) => {\r\n      console.log(response.data)\r\n      props.history.push({\r\n        pathname: \"/app/locals\"\r\n      })\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n  const handleChange = prop => event => {\r\n    if(prop == \"typeLabel\"){\r\n      console.log(\"change label\")\r\n        types.forEach(item=>{\r\n          if(item.label==event.target.value){\r\n            setValues({ ...values, \"type\": item.type });\r\n          }\r\n        }\r\n          )\r\n    }\r\n    setValues({ ...values, [prop]: event.target.value });\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n\r\n        <Grid item xs={12} lg={6} >\r\n          <Card className=\"p-4 mb-4\" style={cardStyle}>\r\n            <form>\r\n              <Divider className=\"my-4\" />\r\n\r\n              <div >\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-fname\">\r\n                    Nom du local\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-fname\"\r\n                    value={values.nom}\r\n                    onChange={handleChange('nom')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <DescriptionIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-lname\">\r\n                    Description\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-lname\"\r\n                    value={values.description}\r\n                    onChange={handleChange('description')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <DescriptionIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-phone\">\r\n                    Adresse\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-phone\"\r\n                    value={values.adresse}\r\n                    onChange={handleChange('adresse')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          edge=\"end\">\r\n                          <PlaceIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={180}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.maxAdulte}\r\n                  type=\"number\"\r\n                  label=\" Max Adulte\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('maxAdulte')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>  \r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                \r\n                <TextField\r\n                  id=\"outlined-number\"\r\n                  value={values.maxEnfant}\r\n                  type=\"number\"\r\n                  label=\" Max Enfants\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange('maxEnfant')}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        edge=\"end\">\r\n                            <AccountCircleOutlinedIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={150}\r\n                />\r\n              </FormControl>\r\n               \r\n                <FormControl \r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\">\r\n                  <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.typeLabel}\r\n                    onChange={handleChange('typeLabel')}\r\n                  >\r\n                   {\r\n                   types.map(item=>\r\n                    <MenuItem value={item.label} key={item.type}>{item.label}</MenuItem>\r\n                  )\r\n                   }\r\n                  </Select>\r\n\r\n                </FormControl>\r\n                \r\n              </div>\r\n              <Button variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ marginLeft: \"57%\" }} onClick={updateLocal}>\r\n                Modifier Local\r\n              </Button>\r\n              <br /><br />\r\n            </ form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LocalUpdate;\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\locals\\Locals.js",["291","292","293","294","295"],"import React from \"react\";\r\nimport { Grid ,Button} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { Dialog, DialogTitle, DialogContent, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useAlert } from \"react-alert\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nconst columns = [\r\n  {\r\n    label: \"Id\",\r\n    name: \"id\",\r\n    \r\n  },\r\n  {\r\n    \r\n    label: \"Nom\",\r\n    name: \"nom\",\r\n    \r\n  },\r\n  {\r\n    label: \"Description\",\r\n    name: \"description\",\r\n    \r\n  },\r\n  {\r\n    label: \"Adresse\",\r\n    name: \"adresse\",\r\n    \r\n  },\r\n  {\r\n    label:\"Max Adulte\",\r\n    name:\"maxAdulte\"\r\n  },\r\n  {\r\n    label:\"Max Enfant\",\r\n    name:\"maxEnfant\"\r\n  },\r\n  {\r\n    label: \"Type\",\r\n    name: \"type.label\",\r\n    \r\n  }\r\n]\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\nconst baseURL = \"http://127.0.0.1:8000/api/locals/\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/api/local\";\r\nexport default function Locals(props) {\r\n  var userDispatch = useUserDispatch();\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const [locals, setLocals] = React.useState([]);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [openPopup, setOpenPopup] = React.useState(false);\r\n  const [rowData, setRowData]= React.useState([]);\r\n  const fetchData = async () => {\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.get(baseURL,{ headers: {\"Authorization\" :token} }).then((response)=>{\r\n      setLocals(response.data);\r\n      console.log(response.data)\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\nReact.useEffect(() => {\r\n  \r\n  const fetchData = async () => {\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.get(baseURL,{ headers: {\"Authorization\" :token} }).then((response)=>{\r\n      setLocals(response.data);\r\n      console.log(response.data)\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n    \r\n\r\n}\r\nfetchData()\r\n \r\n}, []);\r\n  \r\nconst onRowClick = (rowData, rowMeta) => {\r\n  setOpenPopup(true)\r\n  setRowData(rowData);\r\n}\r\nconst updateLoc=()=>{\r\n  console.log(\"----RowClick\");\r\n  console.log(\"rowData: \", rowData[0]);\r\n  props.history.push({\r\n    pathname: `/app/updateLocal/${rowData[0]}`})\r\n}\r\nconst addTarif=()=>{\r\n  console.log(\"----RowClick\");\r\n  console.log(\"rowData: \", rowData);\r\n  props.history.push({\r\n    pathname: `/app/local/${rowData[0]}/tarifs`})\r\n \r\n}\r\n  \r\n  const deleteItem=async (uId)=>{\r\n    const token=localStorage.getItem('id_token');\r\n    axios\r\n  .delete(baseURL1+'/'+uId,{ headers: {\"Authorization\" :token} })\r\n  .then(() => {\r\n    fetchData()\r\n    \r\n  }).catch( (error)=> {\r\n    if (error.response) {\r\n      if(error.response.status==401){\r\n        alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n        signOut(userDispatch, props.history)\r\n      }\r\n     \r\n    }\r\n  });\r\n}\r\n\r\n  const onRowSelectionChange = (curRowSelected, allRowsSelected) => {\r\n    console.log(\"All Selected: \", allRowsSelected);\r\n    let ids=[];\r\n    allRowsSelected.map((item)=>{\r\n      ids.push(locals[item.index].id)\r\n    })\r\n    setSelected(ids)\r\n  }\r\n  const onRowsDelete= (rowsDeleted, newData) => {\r\n    console.log('rowsDeleted');\r\n    console.log(selected);\r\n    selected.forEach((item,index)=>{\r\n      deleteItem(item)\r\n    })\r\n    console.log(locals[rowsDeleted.data[0].index].id)\r\n  }\r\n  const options = {\r\n\t\tfilterType: 'checkbox',\r\n\t\tonRowClick: onRowClick,\r\n    enableNestedDataAccess: '.',\r\n\t\tonRowSelectionChange: onRowSelectionChange,\r\n    onRowsDelete:onRowsDelete\r\n    \r\n\t};\r\n \r\n  return (\r\n    <>\r\n      <PageTitle title=\"Liste des locaux\" button={<Link to=\"/app/addLocal\"><Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      color=\"secondary\"\r\n    ><Add></Add></Button></Link>}/>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Liste des locaux\"\r\n            data={locals}\r\n            columns={columns}\r\n            options={options}\r\n          />\r\n        </Grid>\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        Modification\r\n                    </Typography>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Button>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n            <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"10%\"}}  onClick={updateLoc}>\r\n               Modifier le local\r\n               </Button><br /><br />\r\n              <Button  variant=\"contained\"\r\n                     size=\"medium\"\r\n                     color=\"secondary\" style={{marginLeft:\"10%\" }} onClick={addTarif}  >\r\n               Ajouter des tarifs\r\n               </Button>\r\n            </DialogContent>\r\n        </Dialog>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\tables\\Tables.js",["296","297","298","299","300","301"],"import React from \"react\";\r\nimport { Grid ,Button} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\n\r\nimport { Add } from \"@material-ui/icons\";\r\n\r\n\r\nconst columns = [\r\n  {\r\n    label: \"Id\",\r\n    name: \"id\",\r\n    \r\n  },\r\n  {\r\n    \r\n    label: \"Prenom\",\r\n    name: \"firstName\",\r\n    \r\n  },\r\n  {\r\n    label: \"Nom\",\r\n    name: \"lastName\",\r\n    \r\n  },\r\n  {\r\n    label: \"Email\",\r\n    name: \"email\",\r\n    \r\n  },\r\n  {\r\n    label: \"N° Telephone\",\r\n    name: \"phoneNumber\",\r\n    \r\n  },\r\n  {\r\n    label: \"N° d'adhésion\",\r\n    name: \"numAdesion\",\r\n    \r\n  }\r\n]\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\nconst baseURL = \"http://127.0.0.1:8000/api/users/\";\r\nconst baseURL1 = \"http://127.0.0.1:8000/api/user\";\r\nexport default function Tables(props) {\r\n  var userDispatch = useUserDispatch();\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const [users, setUsers] = React.useState([]);\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const token=localStorage.getItem('id_token');\r\n    await axios.get(baseURL,{ headers: {\"Authorization\" :token} }).then((response)=>{\r\n      setUsers(response.data);\r\n      console.log(response.data)\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\nReact.useEffect(() => {\r\n  const token=localStorage.getItem('id_token');\r\n  console.log(token)\r\n  const fetchData = async () => {\r\n    await axios.get(baseURL,{ headers: {\"Authorization\" :token} }).then((response)=>{\r\n      setUsers(response.data);\r\n      console.log(response.data)\r\n    }).catch( (error)=> {\r\n      if (error.response) {\r\n        if(error.response.status==401){\r\n          alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n          signOut(userDispatch, props.history)\r\n        }\r\n       \r\n      }\r\n    });\r\n    \r\n\r\n}\r\nfetchData()\r\n \r\n}, []);\r\n  \r\n  const onRowClick = (rowData, rowMeta) => {\r\n    console.log(\"----RowClick\");\r\n    console.log(\"rowData: \", rowData);\r\n    console.log(\"rowMeta: \", rowMeta);\r\n     props.history.push({\r\n     pathname: `/app/updateUser/${rowData[0]}`,\r\n     \r\n    })\r\n  }\r\n  const deleteItem=async (uId)=>{\r\n    const token=localStorage.getItem('id_token');\r\n    axios\r\n  .delete(baseURL1+'/'+uId,{ headers: {\"Authorization\" :token} })\r\n  .then(() => {\r\n    fetchData()\r\n    \r\n  }).catch( (error)=> {\r\n    if (error.response) {\r\n      if(error.response.status==401){\r\n        alert.error(\"Votre session a expiré! reconnectez vous s'il vous plais\");\r\n        signOut(userDispatch, props.history)\r\n      }\r\n     \r\n    }\r\n  });\r\n}\r\n  const onRowSelectionChange = (curRowSelected, allRowsSelected) => {\r\n    console.log(\"All Selected: \", allRowsSelected);\r\n    let ids=[];\r\n    allRowsSelected.map((item)=>{\r\n      ids.push(users[item.index].id)\r\n    })\r\n    setSelected(ids)\r\n  }\r\n  const onRowsDelete= (rowsDeleted, newData) => {\r\n    console.log('rowsDeleted');\r\n    console.log(selected);\r\n    selected.forEach((item,index)=>{\r\n      deleteItem(item)\r\n    })\r\n    console.log(users[rowsDeleted.data[0].index].id)\r\n  }\r\n  const options = {\r\n\t\tfilterType: 'checkbox',\r\n\t\tonRowClick: onRowClick,\r\n\t\tonRowSelectionChange: onRowSelectionChange,\r\n    onRowsDelete:onRowsDelete\r\n    \r\n\t};\r\n \r\n  return (\r\n    <>\r\n      <PageTitle title=\"Liste des Utilisateur\" button={<Link to=\"/app/addUser\"><Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      color=\"secondary\"\r\n    ><Add></Add></Button></Link>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Liste des Utilisateur\"\r\n            data={users}\r\n            columns={columns}\r\n            options={options}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\Sidebar.js",["302","303","304","305","306","307","308","309","310"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  \r\n} from \"@material-ui/icons\";\r\n\r\nimport StyleIcon from '@material-ui/icons/Style';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  \r\n  \r\n  { id: 2, label: \" Utilisateur\", link: \"/app/users\", icon: <SupervisorAccountIcon /> },\r\n  { id: 3, label: \"Locaux\", link: \"/app/locals\", icon: <HomeIcon /> },\r\n  { id: 4, label: \"Types\", link: \"/app/types\", icon: <StyleIcon />  },\r\n  { id: 5, label: \"Reservations\", link: \"/app/reservations\", icon: <EventIcon />  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\sliderBook\\SliderBook.js",["311","312","313","314","315","316","317","318","319","320","321"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport { Button } from 'primereact/button';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\nconst urlAddReservation = \"http://127.0.0.1:8000/reservation\"\r\nexport default function SliderBook(props) {\r\n\tconst [formData, setFormData] = useState({});\r\n\tconst [showMessage, setShowMessage] = useState(false);\r\n    const [etat , setEtat] = useState(0);\r\n\tconst types =props.typesLocal;\r\n\r\n\tvar date = new Date();\r\n\tvar dd = date.getDate();\r\n\tvar mm = date.getMonth()+1; \r\n\tvar yyyy = date.getFullYear();\r\n\tvar today = yyyy+\"-\"+mm+\"-\"+dd;\r\n\t\r\n    const defaultValues = {\r\n\t\ttype:'',\r\n        dateDebut: '',\r\n        dateFin: '',\r\n        adulte: 0,\r\n        enfant: 0,\r\n    \r\n    }\r\n\tconst  {formState: { errors }, handleSubmit, register , reset} = useForm({defaultValues});\r\n\r\n    /*useEffect(() => {\r\n\t\tconst urlgetAllType = \"http://127.0.0.1:8000/types\"\r\n        const fetchData = async () => {\r\n        const result = await axios(urlgetAllType);\r\n        setTypes(result.data);\r\n\t\tconsole.log(\"test\");\r\n\t\tfetchData();\r\n\t\t};\r\n\t\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps*/\r\n\r\n    //const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\r\n\tfunction handleChange(event) {\r\n\t\tconsole.log(event.target.value);\r\n\t  }\r\n    const onSubmit = (data) => {\r\n\t\t const res = \r\n                {   \r\n                    membre:{\r\n                        numAdesion:localStorage.getItem('user')\r\n                    }, \r\n\t\t\t\t\ttype:{\r\n\t\t\t\t\t\tid:data.type\r\n\t\t\t\t\t},\r\n                    resesrvationDetails: [\r\n                    {  \r\n                    dateDebut :Math.round(new Date(data.dateDebut).getTime()/1000),\r\n                    dateFin : Math.round(new Date(data.dateFin).getTime()/1000),\r\n                    nbrAdulte : data.adult,\r\n                    nbrEnfant : data.children,\r\n                    local:{\r\n                        id:0\r\n                    }}]\r\n                }\r\n\t\t\t\t \r\n                 setFormData(res);\r\n                 axios.post(urlAddReservation, res)\r\n                .then(response => {\r\n\t\t\t\t\tconsole.log(response.data.code);\r\n\t\t\t\t\tif(response.data.code == -2){\r\n\t\t\t\t\t\tsetEtat(-2);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(response.data.code == 1){\r\n\t\t\t\t\t\tsetEtat(1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n                .catch(err => console.log(err));\r\n\t\t\t\tsetShowMessage(true);\r\n\t\t\t\treset();\r\n\t\t\t\tsetEtat(0);\r\n\r\n\t}\r\n   //NotificationManager.success('Votre réservation est bien enregistré', 'Success',5000)\r\n   const dialogFooter = <div className=\"p-d-flex p-jc-center\"><Button label=\"OK\"  className=\"p-button-text\" autoFocus onClick={() => setShowMessage(false)}/></div>;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"book-slider\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t{etat != 0 ?  \r\n\t\t(<Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"center\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\r\n\t\t\t\t\r\n\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\tif (etat == 1) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t  <><i className=\"pi pi-check-circle mb-2\" style={{ fontSize: '5rem', color: 'var(--green-500)' }}></i>\r\n\t\t\t\t\t\t  <h5>Reservation Successful!</h5>\r\n\t\t\t\t\t\t  <p className=\"text-center\" style={{ lineHeight: 1.5, textIndent: '1rem' }}/>\r\n\t\t\t\t\t\t  <p>Votre réservation est en attente</p></>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else if (etat == -2) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<><i className=\"pi pi-times-circle mb-2\" style={{ fontSize: '5rem', color: 'var(--pink-500)' }}></i>\r\n\t\t\t\t\t\t\t<h5>Indisponibilité du local</h5>\r\n\t\t\t\t   \t\t\t<p className=\"text-center\" style={{ lineHeight: 1.5, textIndent: '1rem' }}/>\r\n\t\t\t\t\t\t\t<p>Le local ne est pas disponible</p></>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})()}\r\n\t\t\t\t\t\r\n                </div>\r\n            </Dialog>) : \"\"}\r\n\t\t\t\t<div className=\"row pos-center\">\r\n\t\t\t\t\t<div className=\"reserve-form-area\">\r\n\t\t\t\t\t\t<form  onSubmit={handleSubmit(onSubmit)} id=\"ajax-reservation-form\">\r\n\t\t\t\t\t\t\t<ul className=\"clearfix\">\r\n\t\t\t\t\t\t\t<li className=\"li-select\">\r\n\t\t\t\t\t\t\t\t\t<label className=\"labelIn\">CATEGORIE</label>\r\n\t\t\t\t\t\t\t\t\t<select name=\"type\" {...register(\"type\",{required:'Type is required *'})}  style={{width : '100px'}} className=\"pretty-select\">\r\n\t\t\t\t\t\t\t\t\t\t{types.map(type => (\r\n\t\t\t\t\t\t\t\t\t\t<option key={type.id} value={type.id} >{type.label}</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t{errors.type  && <span className='text-warning' style ={{fontSize : '12px'}}>{errors.type.message}</span>}\r\n\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"li-input\">\r\n\t\t\t\t\t\t\t\t\t<label  className=\"labelIn\">ARRIVAL</label>\r\n\t\t\t\t\t\t\t\t\t<input  type=\"date\" min={today}   id=\"dpd1\" {...register(\"dateDebut\",{required:'Date debut is required *'})}  name=\"dateDebut\"  />\r\n\t\t\t\t\t\t\t\t\t{errors.dateDebut  && <span className='text-warning' style ={{fontSize : '12px'}}>{errors.dateDebut.message}</span>}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"li-input\">\r\n\t\t\t\t\t\t\t\t\t<label  className=\"labelIn\">DEPARTURE</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"date\" id=\"dpd2\" min={today} {...register(\"dateFin\",{required:'Date fin is required *'})}  name=\"dateFin\" />\r\n\t\t\t\t\t\t\t\t\t{errors.dateFin  && <span className='text-warning text-left' style ={{fontSize : '12px'}}>{errors.dateDebut.message}</span>}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"li-select\">\r\n\t\t\t\t\t\t\t\t\t<label  className=\"labelIn\">ADULT</label>\r\n\t\t\t\t\t\t\t\t\t<select  name=\"adult\" {...register(\"adult\")}   className=\"pretty-select\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\" >1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"li-select\">\r\n\t\t\t\t\t\t\t\t\t<label  className=\"labelIn\">CHILDREN</label>\r\n\t\t\t\t\t\t\t\t\t<select name=\"children\"  {...register(\"children\")}  className=\"pretty-select\">\r\n\t\t\t\t\t\t\t\t\t    <option value=\"0\">0</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<div className=\"button-style-1 margint26\">\r\n\t\t\t\t\t\t\t\t\t\t<input   className=\"btnReserver\" type=\"submit\" value=\"RESERVER\"/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n        <div className=\"bottom-book-slider\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row pos-center\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><i className=\"fa fa-shopping-cart\"></i> WOOCOMMERCE COMPATIBLE</li>\r\n\t\t\t\t\t\t<li><i className=\"fa fa-globe\"></i> LANGUAGE COMPATIBLE</li>\r\n\t\t\t\t\t\t<li><i className=\"fa fa-coffee\"></i> COFFEE & BREAKFAST FREE</li>\r\n\t\t\t\t\t\t<li><i className=\"fa fa-windows\"></i> FREE WI-FI ALL ROOM</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n        </div>\r\n       \r\n    )\r\n\r\n\r\n}","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Header\\Header.js",["322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  React.useEffect(() => {\r\n    const role=localStorage.getItem(\"role\");\r\n  if(role!='admin'){\r\n    props.history.push(\"/home\");\r\n  }\r\n  })\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Dashboard Admin Club UCA\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n           \r\n          </div>\r\n         \r\n        </div>\r\n       \r\n       \r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          \r\n          \r\n          \r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          \r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\footer\\Footer.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\layout\\header\\Header.js",["338","339","340","341","342","343"],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\themes\\default.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Header\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\Notification\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\loginClt\\firebase.js",[],"C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\reservations\\calendar.js",["344"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport axios from \"axios\";\r\n\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\n\r\nimport \"@fullcalendar/core/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport DialogComponent from \"./dialogComponent\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/reservation/id/\"\r\n\r\nexport default function Calendar(props) {\r\n  const [resData,setResData]=React.useState({\r\n    id:\"\",\r\n    member:{\r\n      id:\"\",\r\n      numAdesion:\"\"\r\n    },\r\n    resesrvationDetails:[{\r\n      nbrEnfant: \"\",\r\n\t\t\tnbrAdulte: \"\",\r\n\t\t\tprixCalcule: \"\"\r\n    }]\r\n  });\r\n  const [open,setOpen]=React.useState(false);\r\n  const fetchData = async (id) => {\r\n    await axios.get(baseURL+id).then((response)=>{\r\n        console.log(response.data)\r\n        setResData(response.data)\r\n        setOpen(true)\r\n    })\r\n    }\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <FullCalendar\r\n        defaultView=\"dayGridMonth\"\r\n        header={{\r\n          left: \"prev,next\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\"\r\n        }}\r\n        plugins={[dayGridPlugin, timeGridPlugin]}\r\n        events={props.events}\r\n        eventClick={\r\n          function(arg){\r\n            fetchData(arg.event.id)\r\n            \r\n          }\r\n        }\r\n      />\r\n      <DialogComponent open={open} setOpen={setOpen} resData={resData} deny={props.deny} accept={props.accept} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\reservations\\dialogComponent.js",["345","346","347","348","349"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ChildFriendlyIcon from '@material-ui/icons/ChildFriendly';\r\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { lightGreen, blue, purple, pink } from \"@material-ui/core/colors\";\r\nimport { Typography } from '@material-ui/core';\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst defaultTheme = createMuiTheme({\r\n  palette: {\r\n    primary: lightGreen,\r\n    secondary: pink\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  spacer: {\r\n    marginBottom: theme.spacing(10)\r\n  }\r\n}));\r\nconst useStyle=makeStyles(theme => ({\r\n  dashedBorder: {\r\n    border: \"1px dashed\",\r\n    borderColor: theme.palette.primary.main,\r\n    padding: theme.spacing(2),\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  text: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\nexport default function DialogComponent(props) {\r\n  var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n  const classes = useStyles();\r\n  const classe = useStyle();\r\n  function handleClickOpen() {\r\n    props.setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setOpen(false);\r\n  }\r\nconst toDate=(date)=>{\r\n  var theDate = new Date(date * 1000);\r\n    let dateString = theDate.toGMTString();\r\n    console.log( theDate.getFullYear() + '-' + (theDate.getMonth() + 1) + '-' + theDate.getDate())\r\n    return (\r\n      theDate.getFullYear() + '-' + (theDate.getMonth() + 1) + '-' + theDate.getDate()\r\n    );\r\n}\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n        \r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" >Informations de la réservation</DialogTitle>\r\n        <DialogContent>\r\n          <section>\r\n            <div className=\"item\">\r\n              <p><ChildFriendlyIcon />Nombre des Enfants:</p>\r\n              <p>{props.resData.resesrvationDetails[0].nbrEnfant}</p>\r\n\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"item\">\r\n            <p><Typography className={classe.text} size=\"xl\"><AccessibilityIcon />Nombre des Adults:</Typography></p>\r\n            <p>{props.resData.resesrvationDetails[0].nbrAdulte}</p>\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"item\">\r\n              <p><AttachMoneyIcon /> Prix:</p>\r\n              <p>{props.resData.total} DH</p>\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"item\">\r\n              <p><TodayIcon /> Date de réservation:</p>\r\n              <p>{toDate(\"1642157510\")}</p>\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"item\">\r\n              <p><PersonIcon /> Membre:</p>\r\n              <p>{props.resData.member.numAdesion}</p>\r\n            </div>\r\n          </section>\r\n\r\n          \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <ThemeProvider theme={defaultTheme}>\r\n            <div className={classes.margin}>\r\n              <Button color=\"primary\" variant=\"contained\"\r\n                onClick={() => {\r\n                  props.accept(props.resData.id)\r\n                  handleClose()\r\n                }}>\r\n                Accepter\r\n              </Button>\r\n              <Button color=\"secondary\" variant=\"contained\"\r\n                onClick={() => {\r\n                  props.deny(props.resData.id)\r\n                  handleClose()\r\n                }}>\r\n                Refuser\r\n              </Button>\r\n            </div>\r\n          </ThemeProvider>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\clubUcaFront\\src\\pages\\userSpace\\userSpace.js",["350","351","352","353","354","355","356"],{"ruleId":"357","replacedBy":"358"},{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","severity":1,"message":"362","line":2,"column":10,"nodeType":"363","messageId":"364","endLine":2,"endColumn":20},{"ruleId":"361","severity":1,"message":"365","line":2,"column":9,"nodeType":"363","messageId":"364","endLine":2,"endColumn":13},{"ruleId":"361","severity":1,"message":"366","line":2,"column":16,"nodeType":"363","messageId":"364","endLine":2,"endColumn":25},{"ruleId":"367","severity":1,"message":"368","line":28,"column":29,"nodeType":"369","messageId":"370","endLine":28,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":39,"column":8,"nodeType":"373","endLine":39,"endColumn":10,"suggestions":"374"},{"ruleId":"375","severity":1,"message":"376","line":70,"column":6,"nodeType":"377","endLine":70,"endColumn":43},{"ruleId":"361","severity":1,"message":"378","line":21,"column":10,"nodeType":"363","messageId":"364","endLine":21,"endColumn":14},{"ruleId":"361","severity":1,"message":"379","line":23,"column":10,"nodeType":"363","messageId":"364","endLine":23,"endColumn":13},{"ruleId":"361","severity":1,"message":"380","line":23,"column":14,"nodeType":"363","messageId":"364","endLine":23,"endColumn":20},{"ruleId":"361","severity":1,"message":"381","line":25,"column":8,"nodeType":"363","messageId":"364","endLine":25,"endColumn":13},{"ruleId":"367","severity":1,"message":"368","line":75,"column":13,"nodeType":"369","messageId":"370","endLine":75,"endColumn":15},{"ruleId":"367","severity":1,"message":"368","line":79,"column":12,"nodeType":"369","messageId":"370","endLine":79,"endColumn":14},{"ruleId":"382","severity":1,"message":"383","line":143,"column":9,"nodeType":"377","endLine":143,"endColumn":60},{"ruleId":"361","severity":1,"message":"384","line":5,"column":3,"nodeType":"363","messageId":"364","endLine":5,"endColumn":11},{"ruleId":"361","severity":1,"message":"385","line":9,"column":14,"nodeType":"363","messageId":"364","endLine":9,"endColumn":24},{"ruleId":"361","severity":1,"message":"365","line":9,"column":26,"nodeType":"363","messageId":"364","endLine":9,"endColumn":30},{"ruleId":"361","severity":1,"message":"386","line":10,"column":8,"nodeType":"363","messageId":"364","endLine":10,"endColumn":12},{"ruleId":"361","severity":1,"message":"387","line":18,"column":8,"nodeType":"363","messageId":"364","endLine":18,"endColumn":18},{"ruleId":"361","severity":1,"message":"388","line":20,"column":10,"nodeType":"363","messageId":"364","endLine":20,"endColumn":20},{"ruleId":"361","severity":1,"message":"389","line":27,"column":8,"nodeType":"363","messageId":"364","endLine":27,"endColumn":12},{"ruleId":"361","severity":1,"message":"390","line":28,"column":8,"nodeType":"363","messageId":"364","endLine":28,"endColumn":14},{"ruleId":"361","severity":1,"message":"391","line":43,"column":8,"nodeType":"363","messageId":"364","endLine":43,"endColumn":19},{"ruleId":"361","severity":1,"message":"392","line":43,"column":21,"nodeType":"363","messageId":"364","endLine":43,"endColumn":35},{"ruleId":"361","severity":1,"message":"393","line":44,"column":8,"nodeType":"363","messageId":"364","endLine":44,"endColumn":17},{"ruleId":"361","severity":1,"message":"394","line":44,"column":19,"nodeType":"363","messageId":"364","endLine":44,"endColumn":31},{"ruleId":"361","severity":1,"message":"395","line":45,"column":20,"nodeType":"363","messageId":"364","endLine":45,"endColumn":33},{"ruleId":"361","severity":1,"message":"396","line":46,"column":23,"nodeType":"363","messageId":"364","endLine":46,"endColumn":39},{"ruleId":"361","severity":1,"message":"397","line":2,"column":10,"nodeType":"363","messageId":"364","endLine":2,"endColumn":14},{"ruleId":"361","severity":1,"message":"398","line":32,"column":9,"nodeType":"363","messageId":"364","endLine":32,"endColumn":19},{"ruleId":"361","severity":1,"message":"399","line":51,"column":9,"nodeType":"363","messageId":"364","endLine":51,"endColumn":16},{"ruleId":"400","severity":1,"message":"401","line":56,"column":42,"nodeType":"402","messageId":"403","endLine":56,"endColumn":44},{"ruleId":"367","severity":1,"message":"404","line":57,"column":41,"nodeType":"369","messageId":"370","endLine":57,"endColumn":43},{"ruleId":"400","severity":1,"message":"401","line":80,"column":42,"nodeType":"402","messageId":"403","endLine":80,"endColumn":44},{"ruleId":"367","severity":1,"message":"404","line":81,"column":41,"nodeType":"369","messageId":"370","endLine":81,"endColumn":43},{"ruleId":"361","severity":1,"message":"365","line":8,"column":10,"nodeType":"363","messageId":"364","endLine":8,"endColumn":14},{"ruleId":"361","severity":1,"message":"405","line":11,"column":8,"nodeType":"363","messageId":"364","endLine":11,"endColumn":33},{"ruleId":"361","severity":1,"message":"406","line":20,"column":5,"nodeType":"363","messageId":"364","endLine":20,"endColumn":9},{"ruleId":"361","severity":1,"message":"407","line":22,"column":5,"nodeType":"363","messageId":"364","endLine":22,"endColumn":12},{"ruleId":"367","severity":1,"message":"368","line":88,"column":33,"nodeType":"369","messageId":"370","endLine":88,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":104,"column":33,"nodeType":"369","messageId":"370","endLine":104,"endColumn":35},{"ruleId":"371","severity":1,"message":"408","line":114,"column":4,"nodeType":"373","endLine":114,"endColumn":6,"suggestions":"409"},{"ruleId":"367","severity":1,"message":"368","line":116,"column":10,"nodeType":"369","messageId":"370","endLine":116,"endColumn":12},{"ruleId":"367","severity":1,"message":"368","line":143,"column":31,"nodeType":"369","messageId":"370","endLine":143,"endColumn":33},{"ruleId":"400","severity":1,"message":"410","line":154,"column":31,"nodeType":"402","messageId":"411","endLine":154,"endColumn":33},{"ruleId":"367","severity":1,"message":"368","line":169,"column":35,"nodeType":"369","messageId":"370","endLine":169,"endColumn":37},{"ruleId":"367","severity":1,"message":"368","line":202,"column":39,"nodeType":"369","messageId":"370","endLine":202,"endColumn":41},{"ruleId":"361","severity":1,"message":"384","line":2,"column":10,"nodeType":"363","messageId":"364","endLine":2,"endColumn":18},{"ruleId":"361","severity":1,"message":"412","line":3,"column":18,"nodeType":"363","messageId":"364","endLine":3,"endColumn":23},{"ruleId":"367","severity":1,"message":"368","line":80,"column":33,"nodeType":"369","messageId":"370","endLine":80,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":104,"column":33,"nodeType":"369","messageId":"370","endLine":104,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":143,"column":33,"nodeType":"369","messageId":"370","endLine":143,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":159,"column":35,"nodeType":"369","messageId":"370","endLine":159,"endColumn":37},{"ruleId":"371","severity":1,"message":"413","line":169,"column":6,"nodeType":"373","endLine":169,"endColumn":8,"suggestions":"414"},{"ruleId":"367","severity":1,"message":"368","line":187,"column":33,"nodeType":"369","messageId":"370","endLine":187,"endColumn":35},{"ruleId":"367","severity":1,"message":"404","line":204,"column":103,"nodeType":"369","messageId":"370","endLine":204,"endColumn":105},{"ruleId":"367","severity":1,"message":"404","line":204,"column":169,"nodeType":"369","messageId":"370","endLine":204,"endColumn":171},{"ruleId":"367","severity":1,"message":"404","line":204,"column":222,"nodeType":"369","messageId":"370","endLine":204,"endColumn":224},{"ruleId":"361","severity":1,"message":"415","line":224,"column":11,"nodeType":"363","messageId":"364","endLine":224,"endColumn":17},{"ruleId":"367","severity":1,"message":"404","line":227,"column":18,"nodeType":"369","messageId":"370","endLine":227,"endColumn":20},{"ruleId":"367","severity":1,"message":"368","line":311,"column":84,"nodeType":"369","messageId":"370","endLine":311,"endColumn":86},{"ruleId":"367","severity":1,"message":"368","line":312,"column":28,"nodeType":"369","messageId":"370","endLine":312,"endColumn":30},{"ruleId":"361","severity":1,"message":"384","line":2,"column":10,"nodeType":"363","messageId":"364","endLine":2,"endColumn":18},{"ruleId":"367","severity":1,"message":"368","line":72,"column":35,"nodeType":"369","messageId":"370","endLine":72,"endColumn":37},{"ruleId":"371","severity":1,"message":"416","line":82,"column":6,"nodeType":"373","endLine":82,"endColumn":8,"suggestions":"417"},{"ruleId":"367","severity":1,"message":"368","line":86,"column":24,"nodeType":"369","messageId":"370","endLine":86,"endColumn":26},{"ruleId":"367","severity":1,"message":"368","line":99,"column":39,"nodeType":"369","messageId":"370","endLine":99,"endColumn":41},{"ruleId":"367","severity":1,"message":"368","line":110,"column":15,"nodeType":"369","messageId":"370","endLine":110,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":113,"column":26,"nodeType":"369","messageId":"370","endLine":113,"endColumn":28},{"ruleId":"361","severity":1,"message":"415","line":124,"column":11,"nodeType":"363","messageId":"364","endLine":124,"endColumn":17},{"ruleId":"361","severity":1,"message":"418","line":6,"column":8,"nodeType":"363","messageId":"364","endLine":6,"endColumn":17},{"ruleId":"361","severity":1,"message":"419","line":43,"column":7,"nodeType":"363","messageId":"364","endLine":43,"endColumn":14},{"ruleId":"367","severity":1,"message":"368","line":78,"column":39,"nodeType":"369","messageId":"370","endLine":78,"endColumn":41},{"ruleId":"367","severity":1,"message":"404","line":86,"column":27,"nodeType":"369","messageId":"370","endLine":86,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":86,"column":39,"nodeType":"369","messageId":"370","endLine":86,"endColumn":41},{"ruleId":"367","severity":1,"message":"368","line":86,"column":71,"nodeType":"369","messageId":"370","endLine":86,"endColumn":73},{"ruleId":"367","severity":1,"message":"368","line":88,"column":29,"nodeType":"369","messageId":"370","endLine":88,"endColumn":31},{"ruleId":"367","severity":1,"message":"368","line":98,"column":12,"nodeType":"369","messageId":"370","endLine":98,"endColumn":14},{"ruleId":"420","severity":1,"message":"421","line":103,"column":6,"nodeType":"422","messageId":"423","endLine":103,"endColumn":52},{"ruleId":"367","severity":1,"message":"368","line":103,"column":38,"nodeType":"369","messageId":"370","endLine":103,"endColumn":40},{"ruleId":"420","severity":1,"message":"421","line":105,"column":12,"nodeType":"422","messageId":"423","endLine":105,"endColumn":57},{"ruleId":"367","severity":1,"message":"368","line":105,"column":44,"nodeType":"369","messageId":"370","endLine":105,"endColumn":46},{"ruleId":"361","severity":1,"message":"415","line":112,"column":11,"nodeType":"363","messageId":"364","endLine":112,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":77,"column":35,"nodeType":"369","messageId":"370","endLine":77,"endColumn":37},{"ruleId":"371","severity":1,"message":"424","line":88,"column":6,"nodeType":"373","endLine":88,"endColumn":8,"suggestions":"425"},{"ruleId":"367","severity":1,"message":"368","line":100,"column":33,"nodeType":"369","messageId":"370","endLine":100,"endColumn":35},{"ruleId":"361","severity":1,"message":"426","line":114,"column":9,"nodeType":"363","messageId":"364","endLine":114,"endColumn":32},{"ruleId":"361","severity":1,"message":"427","line":118,"column":9,"nodeType":"363","messageId":"364","endLine":118,"endColumn":32},{"ruleId":"361","severity":1,"message":"415","line":121,"column":11,"nodeType":"363","messageId":"364","endLine":121,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":80,"column":35,"nodeType":"369","messageId":"370","endLine":80,"endColumn":37},{"ruleId":"367","severity":1,"message":"368","line":92,"column":35,"nodeType":"369","messageId":"370","endLine":92,"endColumn":37},{"ruleId":"371","severity":1,"message":"428","line":102,"column":6,"nodeType":"373","endLine":102,"endColumn":8,"suggestions":"429"},{"ruleId":"367","severity":1,"message":"368","line":113,"column":33,"nodeType":"369","messageId":"370","endLine":113,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":122,"column":13,"nodeType":"369","messageId":"370","endLine":122,"endColumn":15},{"ruleId":"367","severity":1,"message":"368","line":125,"column":24,"nodeType":"369","messageId":"370","endLine":125,"endColumn":26},{"ruleId":"367","severity":1,"message":"368","line":71,"column":33,"nodeType":"369","messageId":"370","endLine":71,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":88,"column":33,"nodeType":"369","messageId":"370","endLine":88,"endColumn":35},{"ruleId":"371","severity":1,"message":"408","line":100,"column":4,"nodeType":"373","endLine":100,"endColumn":6,"suggestions":"430"},{"ruleId":"367","severity":1,"message":"368","line":129,"column":31,"nodeType":"369","messageId":"370","endLine":129,"endColumn":33},{"ruleId":"400","severity":1,"message":"410","line":141,"column":31,"nodeType":"402","messageId":"411","endLine":141,"endColumn":33},{"ruleId":"361","severity":1,"message":"399","line":59,"column":9,"nodeType":"363","messageId":"364","endLine":59,"endColumn":16},{"ruleId":"367","severity":1,"message":"368","line":71,"column":33,"nodeType":"369","messageId":"370","endLine":71,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":88,"column":33,"nodeType":"369","messageId":"370","endLine":88,"endColumn":35},{"ruleId":"371","severity":1,"message":"408","line":100,"column":4,"nodeType":"373","endLine":100,"endColumn":6,"suggestions":"431"},{"ruleId":"367","severity":1,"message":"368","line":120,"column":31,"nodeType":"369","messageId":"370","endLine":120,"endColumn":33},{"ruleId":"400","severity":1,"message":"410","line":131,"column":31,"nodeType":"402","messageId":"411","endLine":131,"endColumn":33},{"ruleId":"361","severity":1,"message":"432","line":5,"column":24,"nodeType":"363","messageId":"364","endLine":5,"endColumn":41},{"ruleId":"361","severity":1,"message":"433","line":6,"column":17,"nodeType":"363","messageId":"364","endLine":6,"endColumn":31},{"ruleId":"361","severity":1,"message":"434","line":7,"column":17,"nodeType":"363","messageId":"364","endLine":7,"endColumn":31},{"ruleId":"361","severity":1,"message":"435","line":8,"column":16,"nodeType":"363","messageId":"364","endLine":8,"endColumn":25},{"ruleId":"361","severity":1,"message":"436","line":9,"column":21,"nodeType":"363","messageId":"364","endLine":9,"endColumn":32},{"ruleId":"361","severity":1,"message":"437","line":10,"column":19,"nodeType":"363","messageId":"364","endLine":10,"endColumn":30},{"ruleId":"361","severity":1,"message":"438","line":11,"column":18,"nodeType":"363","messageId":"364","endLine":11,"endColumn":25},{"ruleId":"361","severity":1,"message":"405","line":21,"column":8,"nodeType":"363","messageId":"364","endLine":21,"endColumn":33},{"ruleId":"361","severity":1,"message":"439","line":28,"column":8,"nodeType":"363","messageId":"364","endLine":28,"endColumn":11},{"ruleId":"361","severity":1,"message":"440","line":1,"column":17,"nodeType":"363","messageId":"364","endLine":1,"endColumn":26},{"ruleId":"361","severity":1,"message":"441","line":2,"column":19,"nodeType":"363","messageId":"364","endLine":2,"endColumn":29},{"ruleId":"361","severity":1,"message":"442","line":7,"column":9,"nodeType":"363","messageId":"364","endLine":7,"endColumn":30},{"ruleId":"361","severity":1,"message":"443","line":7,"column":32,"nodeType":"363","messageId":"364","endLine":7,"endColumn":51},{"ruleId":"361","severity":1,"message":"444","line":11,"column":9,"nodeType":"363","messageId":"364","endLine":11,"endColumn":17},{"ruleId":"361","severity":1,"message":"445","line":44,"column":11,"nodeType":"363","messageId":"364","endLine":44,"endColumn":23},{"ruleId":"367","severity":1,"message":"368","line":71,"column":28,"nodeType":"369","messageId":"370","endLine":71,"endColumn":30},{"ruleId":"367","severity":1,"message":"368","line":75,"column":33,"nodeType":"369","messageId":"370","endLine":75,"endColumn":35},{"ruleId":"367","severity":1,"message":"404","line":95,"column":10,"nodeType":"369","messageId":"370","endLine":95,"endColumn":12},{"ruleId":"367","severity":1,"message":"368","line":100,"column":16,"nodeType":"369","messageId":"370","endLine":100,"endColumn":18},{"ruleId":"367","severity":1,"message":"368","line":107,"column":23,"nodeType":"369","messageId":"370","endLine":107,"endColumn":25},{"ruleId":"361","severity":1,"message":"446","line":6,"column":3,"nodeType":"363","messageId":"364","endLine":6,"endColumn":12},{"ruleId":"361","severity":1,"message":"447","line":9,"column":3,"nodeType":"363","messageId":"364","endLine":9,"endColumn":6},{"ruleId":"361","severity":1,"message":"365","line":10,"column":3,"nodeType":"363","messageId":"364","endLine":10,"endColumn":7},{"ruleId":"361","severity":1,"message":"448","line":14,"column":18,"nodeType":"363","messageId":"364","endLine":14,"endColumn":26},{"ruleId":"361","severity":1,"message":"432","line":15,"column":24,"nodeType":"363","messageId":"364","endLine":15,"endColumn":41},{"ruleId":"361","severity":1,"message":"449","line":17,"column":13,"nodeType":"363","messageId":"364","endLine":17,"endColumn":23},{"ruleId":"361","severity":1,"message":"450","line":18,"column":11,"nodeType":"363","messageId":"364","endLine":18,"endColumn":19},{"ruleId":"361","severity":1,"message":"451","line":27,"column":10,"nodeType":"363","messageId":"364","endLine":27,"endColumn":15},{"ruleId":"361","severity":1,"message":"452","line":27,"column":29,"nodeType":"363","messageId":"364","endLine":27,"endColumn":35},{"ruleId":"361","severity":1,"message":"453","line":29,"column":8,"nodeType":"363","messageId":"364","endLine":29,"endColumn":18},{"ruleId":"361","severity":1,"message":"454","line":39,"column":7,"nodeType":"363","messageId":"364","endLine":39,"endColumn":15},{"ruleId":"367","severity":1,"message":"404","line":95,"column":10,"nodeType":"369","messageId":"370","endLine":95,"endColumn":12},{"ruleId":"361","severity":1,"message":"455","line":108,"column":8,"nodeType":"363","messageId":"364","endLine":108,"endColumn":21},{"ruleId":"361","severity":1,"message":"456","line":108,"column":23,"nodeType":"363","messageId":"364","endLine":108,"endColumn":39},{"ruleId":"361","severity":1,"message":"457","line":110,"column":8,"nodeType":"363","messageId":"364","endLine":110,"endColumn":29},{"ruleId":"361","severity":1,"message":"458","line":110,"column":31,"nodeType":"363","messageId":"364","endLine":110,"endColumn":55},{"ruleId":"361","severity":1,"message":"459","line":3,"column":16,"nodeType":"363","messageId":"364","endLine":3,"endColumn":22},{"ruleId":"367","severity":1,"message":"368","line":30,"column":33,"nodeType":"369","messageId":"370","endLine":30,"endColumn":35},{"ruleId":"367","severity":1,"message":"368","line":32,"column":43,"nodeType":"369","messageId":"370","endLine":32,"endColumn":45},{"ruleId":"460","severity":1,"message":"461","line":37,"column":10,"nodeType":"377","endLine":37,"endColumn":90},{"ruleId":"462","severity":1,"message":"463","line":39,"column":10,"nodeType":"377","endLine":39,"endColumn":73},{"ruleId":"460","severity":1,"message":"461","line":39,"column":73,"nodeType":"377","endLine":39,"endColumn":183},{"ruleId":"361","severity":1,"message":"464","line":13,"column":8,"nodeType":"363","messageId":"364","endLine":13,"endColumn":16},{"ruleId":"361","severity":1,"message":"465","line":12,"column":22,"nodeType":"363","messageId":"364","endLine":12,"endColumn":26},{"ruleId":"361","severity":1,"message":"466","line":12,"column":28,"nodeType":"363","messageId":"364","endLine":12,"endColumn":34},{"ruleId":"361","severity":1,"message":"467","line":51,"column":7,"nodeType":"363","messageId":"364","endLine":51,"endColumn":14},{"ruleId":"361","severity":1,"message":"468","line":54,"column":12,"nodeType":"363","messageId":"364","endLine":54,"endColumn":27},{"ruleId":"361","severity":1,"message":"398","line":63,"column":9,"nodeType":"363","messageId":"364","endLine":63,"endColumn":19},{"ruleId":"367","severity":1,"message":"368","line":23,"column":30,"nodeType":"369","messageId":"370","endLine":23,"endColumn":32},{"ruleId":"371","severity":1,"message":"408","line":34,"column":5,"nodeType":"373","endLine":34,"endColumn":7,"suggestions":"469"},{"ruleId":"361","severity":1,"message":"467","line":36,"column":7,"nodeType":"363","messageId":"364","endLine":36,"endColumn":14},{"ruleId":"361","severity":1,"message":"398","line":38,"column":7,"nodeType":"363","messageId":"364","endLine":38,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":48,"column":15,"nodeType":"369","messageId":"370","endLine":48,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":53,"column":16,"nodeType":"369","messageId":"370","endLine":53,"endColumn":18},{"ruleId":"375","severity":1,"message":"376","line":92,"column":9,"nodeType":"377","endLine":92,"endColumn":46},"no-native-reassign",["470"],"no-negated-in-lhs",["471"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useParams' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'alert', 'props.history', and 'userDispatch'. Either include them or remove the dependency array.","ArrayExpression",["472"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'show' is assigned a value but never used.","'jwt' is assigned a value but never used.","'setJwt' is assigned a value but never used.","'error' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Redirect' is defined but never used.","'IconButton' is defined but never used.","'Icon' is defined but never used.","'classnames' is defined but never used.","'makeStyles' is defined but never used.","'logo' is defined but never used.","'google' is defined but never used.","'activeTabId' is assigned a value but never used.","'setActiveTabId' is assigned a value but never used.","'nameValue' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","'setLoginValue' is assigned a value but never used.","'setPasswordValue' is assigned a value but never used.","'Grid' is defined but never used.","'dateString' is assigned a value but never used.","'classes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'AccountCircleOutlinedIcon' is defined but never used.","'Card' is defined but never used.","'Divider' is defined but never used.","React Hook React.useEffect has missing dependencies: 'alert', 'props.history', and 'userDispatch'. Either include them or remove the dependency array.",["473"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'Build' is defined but never used.","React Hook React.useEffect has missing dependencies: 'alert', 'id.id', 'props.history', and 'userDispatch'. Either include them or remove the dependency array.",["474"],"'action' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'alert', 'props.history', 'types', and 'userDispatch'. Either include them or remove the dependency array.",["475"],"'TextField' is defined but never used.","'baseURL' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook React.useEffect has missing dependencies: 'alert', 'id', 'props.history', and 'userDispatch'. Either include them or remove the dependency array.",["476"],"'handleClickShowPassword' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'alert', 'id', 'props.history', 'types', and 'userDispatch'. Either include them or remove the dependency array.",["477"],["478"],["479"],"'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'useEffect' is defined but never used.","'Controller' is defined but never used.","'NotificationContainer' is defined but never used.","'NotificationManager' is defined but never used.","'formData' is assigned a value but never used.","'handleChange' is defined but never used.","'InputBase' is defined but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","'UserAvatar' is defined but never used.","'messages' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'Router' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'MuiAlert' is defined but never used.","'blue' is defined but never used.","'purple' is defined but never used.","'options' is assigned a value but never used.","'handleClickOpen' is defined but never used.",["480"],"no-global-assign","no-unsafe-negation",{"desc":"481","fix":"482"},{"desc":"481","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"481","fix":"492"},{"desc":"481","fix":"493"},{"desc":"481","fix":"494"},"Update the dependencies array to be: [alert, props.history, userDispatch]",{"range":"495","text":"496"},{"range":"497","text":"496"},"Update the dependencies array to be: [alert, id.id, props.history, userDispatch]",{"range":"498","text":"499"},"Update the dependencies array to be: [alert, props.history, types, userDispatch]",{"range":"500","text":"501"},"Update the dependencies array to be: [alert, id, props.history, userDispatch]",{"range":"502","text":"503"},"Update the dependencies array to be: [alert, id, props.history, types, userDispatch]",{"range":"504","text":"505"},{"range":"506","text":"496"},{"range":"507","text":"496"},{"range":"508","text":"496"},[1299,1301],"[alert, props.history, userDispatch]",[3186,3188],[4825,4827],"[alert, id.id, props.history, userDispatch]",[2323,2325],"[alert, props.history, types, userDispatch]",[2532,2534],"[alert, id, props.history, userDispatch]",[3124,3126],"[alert, id, props.history, types, userDispatch]",[2670,2672],[2417,2419],[1141,1143]]